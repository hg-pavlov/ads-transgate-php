var DEVICE_TYPE_UNKNOWN=0;var DEVICE_TYPE_SENSOR=1;var DEVICE_TYPE_OUTLET=2;var DEVICE_TYPE_STEPPER=4;var DEVICE_TYPE_ENGINE=8;var DEVICE_STATE_MODE_MASK=240;var DEVICE_STATE_MODE_CTL=16;var DEVICE_STATE_MODE_AUTO=32;var OUTLET_CONSUMER_DEFAULT=0;var OUTLET_CONSUMER_LIGHT=1;var OUTLET_CONSUMER_WATER=2;var OUTLET_CONSUMER_HEATER=3;var OUTLET_CONSUMER_COOLER=4;var OUTLET_CONSUMER_OXYGEN=5;var OUTLET_CONSUMER_CO2=6;var OUTLET_CONSUMER_WIND=7;var OUTLET_CONSUMER_MAX=7;var OUTLET_CONSUMER_NAMES=["Розетка","Освещение","Полив","Отопление","Охлаждение","Вентиляция","Углекислый газ","Обдув"];var OUTLET_CONSUMER_IMAGES=["outlet","light","water","heater","cooler","oxygen","co2","wind"];var OUTLET_RULE_APPEND=1;var OUTLET_RULE_INSERT=256;var OUTLET_RULE_INSERT_BEFORE=768;var OUTLET_RULE_INSERT_AFTER=1280;var OUTLET_RULE_REPLACE=65536;var OUTLET_RULE_DELETE=16777216;var OUTLET_RULE_FLAG_RULE_ALG_OR=1;var OUTLET_RULE_FLAG_RULE_ALG_AND=2;var OUTLET_RULE_FLAG_RULE_ALG_PRIO=4;var OUTLET_RULE_FLAG_RISE=16;var OUTLET_RULE_FLAG_FALL=32;var OUTLET_RULE_FLAG_ONOFF_ON=16;var OUTLET_RULE_FLAG_ONOFF_OFF=32;var OUTLET_RULE_FLAG_DATE_ENABLE=268435456;var OUTLET_RULE_FLAG_WEEK_ENABLE=536870912;var OUTLET_RULE_FLAG_TIME_EXACT=536870912;var OUTLET_RULE_FLAG_TIME_INTERVAL=1073741824;var OUTLET_RULE_FLAG_ON=256;var OUTLET_RULE_FLAG_OFF=512;var OUTLET_RULE_CONDITION_COUNT_MAX=10;var SENSOR_TYPE_MASK=(65535);var SENSOR_GROUP_MASK=(4278190080);var SENSOR_COUNT_MASK=(16711680);var SENSOR_DAYTIME_MASK=(16777215);var SENSOR_WEEKDAY_MASK=(4278190080);var STM32_ADC1_GROUP=16777216;var STM32_ADC2_GROUP=33554432;var STM32_BME280_BUS1_GROUP=50331648;var STM32_BME280_BUS2_GROUP=67108864;var STM32_MCP23017_BUS1_GROUP=83886080;var STM32_MCP23017_BUS2_GROUP=100663296;var STM32_BH1750_BUS1_GROUP=117440512;var STM32_BH1750_BUS2_GROUP=134217728;var DIGITAL_ID_0=0;var DIGITAL_ID_1=65536;var SENSOR_TYPE_NULL=0;var SENSOR_TYPE_DATE=1;var SENSOR_TYPE_DAYTIME=2;var SENSOR_TYPE_TEMPERATURE=3;var SENSOR_TYPE_HUMIDITY=4;var SENSOR_TYPE_PRESSURE=5;var SENSOR_TYPE_SEA_LEVEL_PRESSURE=6;var SENSOR_TYPE_DEW_POINT=7;var SENSOR_TYPE_CO2=8;var SENSOR_TYPE_ALTITUDE=9;var SENSOR_TYPE_LIGHT_IN=10;var SENSOR_TYPE_LIGHT_OUT=11;var SENSOR_TYPE_GYRO=12;var SENSOR_TYPE_COMPASS=13;var SENSOR_TYPE_EC=14;var SENSOR_TYPE_PH=15;var SENSOR_TYPE_TDS=16;var SENSOR_TYPE_PPM=17;var SENSOR_TYPE_SOLUTION_TEMP=18;var SENSOR_TYPE_ONOFF=19;var SENSOR_TYPE_ONOFF_CHANGED=20;var SENSOR_TYPE_RAW=21;var SENSOR_TYPE_MAX=21;var SENSOR_COUNT_MAX=32;var SENSOR_DIGITAL_MAX=4;var SENSOR_TYPE_NAMES=["","Дата","","Температура воздуха","Влажность воздуха","Атмосферное давление","Атмосферное давление на уровне моря","Точка росы","Насыщение углекислым газом","Высота над заданной точкой","Уровень внутреннего освещения","Уровень внешнего освещения","Угол наклона","Угол от направления СЕВЕР","Электропроводность раствора","Уровень PH раствора","Уровень TDS раствора","Уровень PPM раствора","Температура раствора","Датчик логический","Датчик логический","Сырые показания АЦП"];var SENSOR_DAYTIME_TYPE_NAMES=["Время суток","Интервал"];var SENSOR_GROUP_NAMES=["","(Аналог.)","(Аналог.)","(Цифр.)","(Цифр.)","(Логич.)","(Логич.)",""];var SENSOR_ANALOG_TYPES=[[SENSOR_TYPE_NULL,"Не выбран тип датчика"],[SENSOR_TYPE_RAW,"Сырые показания АЦП"],[SENSOR_TYPE_TEMPERATURE,"Температура воздуха"],[SENSOR_TYPE_SOLUTION_TEMP,"Температура жидкости"],[SENSOR_TYPE_LIGHT_IN,"Освещение внутреннее"],[SENSOR_TYPE_LIGHT_OUT,"Освещение внешнее"],[SENSOR_TYPE_EC,"TDS/EC/PPM жидкости"]];var SUPPORTED_ADC_PINS=10;var SENSOR_ADC_PINS_MAX=10;var SENSOR_AUX_PINS_MAX=10;var SUPPORTED_MCP23017_SENSORS=32;var SENSOR_LOGIC_PINS_MAX=SUPPORTED_MCP23017_SENSORS;var SENSOR_CONFIG_LENGTH=8012;var SENSOR_ADC_CONFIG_LENGTH=194;var METRIC_PORT_MIN=49152;var METRIC_PORT_MAX=65535;var ADC_MAX_VALUE=4096;var ADC_MEASUREMENT_COUNT_MAX=16;var ADC_AUX_PIN_COUNT_MAX=3;var ADC_CALIBRATION_COUNT=20;var ADC_CALIBRATION_DATA_MINIMUM=4;var EC_PPM_CONVERSION_FACTOR_MIN=500;var SENSOR_NAME_SIZE=128;var OUTLET_NAME_SIZE=128;var DEVICE_NAME_SIZE=128;var DEVICE_CONFIG_SIZE=(8+4+4+128+8+4+16+2+128+128);var API_REQUEST_SYSTEM_GET_CLEAR_LOGS="system_clearlogs";var API_REQUEST_SYSTEM_SET_METRIC_PORT="system_metricport";var API_REQUEST_SYSTEM_GET_RUNLOG="system_getrunlog";var API_REQUEST_SYSTEM_GET_ERRLOG="system_geterrlog";var API_REQUEST_SYSTEM_GET_INFO="system_getinfo";var API_REQUEST_SYSTEM_SET_DATETIME="system_setdatetime";var API_REQUEST_SYSTEM_SET_DEVICE_CONFIG="system_setdevconf";var API_REQUEST_SYSTEM_GET_DEVICE_CONFIG="system_getdevconf";var API_REQUEST_SENSOR_WORK_START="sensor_workstart";var API_REQUEST_SENSOR_WORK_STOP="sensor_workstop";var API_REQUEST_SENSOR_GET_CONFIG="sensor_getconfig";var API_REQUEST_SENSOR_SET_CONFIG="sensor_setconfig";var API_REQUEST_SENSOR_GET_DEVICE_NAME="sensor_getdevname";var API_REQUEST_SENSOR_SET_DEVICE_NAME="sensor_setdevname";var API_REQUEST_SENSOR_SET_ALTITUDE="sensor_setaltitude";var API_REQUEST_SENSOR_SET_ADC_CALIBR="sensor_setadccalibr";var API_REQUEST_SENSOR_SET_ADC_PIN="sensor_setadcpin";var API_REQUEST_SENSOR_SET_ADC_NAME="sensor_setadcpinname";var API_REQUEST_SENSOR_GET_ADC_NAME="sensor_getadcpinname";var API_REQUEST_SENSOR_GET_LOGIC_NAME="sensor_getlogicname";var API_REQUEST_SENSOR_SET_LOGIC_PIN="sensor_setlogicpin";var API_REQUEST_SENSOR_SET_DIGITAL_NAME="sensor_setdigitalname";var API_REQUEST_SENSOR_GET_DIGITAL_NAME="sensor_getdigitalname";var API_REQUEST_SENSOR_GET_METRIC="sensor_getmetric";var API_REQUEST_OUTLET_WORK_START="outlet_workstart";var API_REQUEST_OUTLET_WORK_STOP="outlet_workstop";var API_REQUEST_OUTLET_SET_DEVICE_NAME="outlet_setdevname";var API_REQUEST_OUTLET_GET_DEVICE_NAME="outlet_getdevname";var API_REQUEST_OUTLET_GET_DEVICE_STATE="outlet_getdevstate";var API_REQUEST_OUTLET_GET_DEVICE_CONFIG="outlet_getdevconf";var API_REQUEST_OUTLET_GET_COUNT="outlet_getcount";var API_REQUEST_OUTLET_GET_CONFIG="outlet_getconfig";var API_REQUEST_OUTLET_GET_STATE="outlet_getstate";var API_REQUEST_OUTLET_GET_SENSORLIST="outlet_getsensorlist";var API_REQUEST_OUTLET_GET_RULES="outlet_getrules";var API_REQUEST_OUTLET_SET_STATE="outlet_setstate";var API_REQUEST_OUTLET_SET_CONFIG="outlet_setconfig";var API_REQUEST_OUTLET_SET_RULE="outlet_setrule";var API_REQUEST_OUTLET_DELETE_RULE="outlet_delrule";var API_REQUEST_WIFI_SET_CONFIG="wifi_setconfig";var DEVICE={};var OUTLET={};var SENSOR={};function get_outlet_device_config(a){send_get(API_REQUEST_OUTLET_GET_DEVICE_CONFIG,null,null,function(h){var g=null;if(h.response){var d=new Uint8Array(h.response);if(d.length<parseInt(8+OUTLET_NAME_SIZE+4)){switch(d[0]){case -1:console.log(" get_outlet_device_config ERROR ");break;default:console.log(" unknown status "+(parseInt(d[0])).toString())}g=parseInt(d[0]);if(a){a(g)}return}var j=0;var f=new DataView(d.buffer);OUTLET.device_id=[];for(var i=0;i<8;i++){OUTLET.device_id[i]=f.getUint8(j,true);j++}var e=new Uint8Array(d.buffer,8,OUTLET_NAME_SIZE);var b=0;while(b<OUTLET_NAME_SIZE&&e[b]!=0){b++}e=new Uint8Array(d.buffer,8,b);OUTLET.name=decodeUtf8(e);j+=OUTLET_NAME_SIZE;OUTLET.flags=f.getUint32(j,true);j+=4;g=0}else{console.log(" get_device_config: null answer")}if(a){a(g)}})}function get_outlet_sensor_list(a){send_get(API_REQUEST_OUTLET_GET_SENSORLIST,null,null,function(h){var b=null;if(h.response){var g=new Uint8Array(h.response);var f=new DataView(g.buffer);if(f.byteLength<4){console.log(" get_outlet_sensor_list: response "+f.byteLength.toString()+" bytes ");if(a){a(null)}return}else{if(f.byteLength==4){console.log(" get_outlet_sensor_list: error "+f.getInt32(0,true).toString()+" bytes ");if(a){a(f.getInt32(0,true))}return}}OUTLET.sensor_list=[];for(var j=0,e=0;e<f.byteLength;j++){OUTLET.sensor_list[j]={};OUTLET.sensor_list[j].device_id=[];for(var m=0;m<8;m++){OUTLET.sensor_list[j].device_id[m]=f.getUint8(e,true);e++}var d=new Uint8Array(f.buffer,e,SENSOR_NAME_SIZE);var k=0;while(k<SENSOR_NAME_SIZE&&d[k]!=0){k++}d=new Uint8Array(f.buffer,e,k);OUTLET.sensor_list[j].name=decodeUtf8(d);e+=SENSOR_NAME_SIZE;OUTLET.sensor_list[j].sensor_count=f.getUint32(e,true);e+=4;OUTLET.sensor_list[j].metric=[];for(var o=0;o<OUTLET.sensor_list[j].sensor_count;o++,e+=8){OUTLET.sensor_list[j].metric[o]={};OUTLET.sensor_list[j].metric[o].type=parseInt(f.getUint32(e+0,true));var l=(OUTLET.sensor_list[j].metric[o].type&SENSOR_TYPE_MASK);if(l==SENSOR_TYPE_DAYTIME){OUTLET.sensor_list[j].metric[o].value=parseInt(f.getUint32(e+4,true))}else{if(l==SENSOR_TYPE_ONOFF||l==SENSOR_TYPE_ONOFF_CHANGED){OUTLET.sensor_list[j].metric[o].value=parseInt(f.getUint32(e+4,true))}else{OUTLET.sensor_list[j].metric[o].value=parseFloat(f.getFloat32(e+4,true))}}}}b=0}else{console.log(" get_sensor_list: no sensors now ")}if(a){a(b)}})}function get_outlet_count(a){send_get(API_REQUEST_OUTLET_GET_COUNT,null,null,function(d){var c=null;if(d.response){var b=new Int32Array(d.response);switch(b[0]){case -1:console.log(" getcount ERROR ");c=-1;break;case 0:console.log("NO OUTLET");OUTLET.count=parseInt(b[0]);c=0;break;default:OUTLET.count=parseInt(b[0]);c=0;break}}else{console.log(" outlet_get_count: null answer")}if(a){a(c)}})}function set_outlet_config(a,c,e,b,g){var f=new Uint8Array(8+OUTLET_NAME_SIZE);var d=new DataView(f.buffer);d.setUint16(0,a,true);d.setUint16(2,c,true);d.setUint32(4,e,true);string_to_buffer(d,8,OUTLET_NAME_SIZE,b);send_post(API_REQUEST_OUTLET_SET_CONFIG+"?oid="+a,f,null,function(j){var i=null;if(j.response){var h=new Int32Array(j.response);switch(h[0]){case 0:if(!OUTLET.outlet[a]){OUTLET.outlet[a]={}}OUTLET.outlet[a].id=a;OUTLET.outlet[a].consumer=c;OUTLET.outlet[a].state=e;OUTLET.outlet[a].name=b;console.log(" setconfig OK ");break;case -1:console.log(" setconfig ERROR ");break;default:console.log(" unknown setconfig status: "+h[0].toString());break}i=parseInt(h[0])}else{console.log(" no response on setconfig command")}if(g){g(a,i)}})}function get_outlet_config(b,a,c){if(b<0){b=0}if(a<=0){console.log(" get outlet config: invalid argument ");if(c){c(b,a,-1)}return}send_get(API_REQUEST_OUTLET_GET_CONFIG+"?oid="+b.toString()+"&count="+a.toString(),null,null,function(j){var d=null;if(j.response){var h=new Int32Array(j.response,j.response.byteLength/4);if(h.length<parseInt(8+OUTLET_NAME_SIZE)){switch(h[0]){case 0:console.log("NO CONFIG");break;case -1:console.log(" getconfig ERROR ");break;default:console.log("unknown status "+(parseInt(h[0])).toString())}if(c){c(b,a,parseInt(h[0]))}return}var f=new DataView(h.buffer);if(!OUTLET.outlet){OUTLET.outlet=[]}for(var k=b,g=0;((g+8+OUTLET_NAME_SIZE)<=f.byteLength)&&(k<(b+a));k++){var m=[];if(OUTLET.outlet[k]&&OUTLET.outlet[k].rule){m=OUTLET.outlet[k].rule}OUTLET.outlet[k]={};OUTLET.outlet[k].rule=m;OUTLET.outlet[k].id=f.getUint16(g,true);g+=2;OUTLET.outlet[k].consumer=f.getUint16(g,true);g+=2;OUTLET.outlet[k].state=f.getUint32(g,true);g+=4;var e=new Uint8Array(h.buffer,g,OUTLET_NAME_SIZE);var l=0;while(l<OUTLET_NAME_SIZE&&e[l]!=0){l++}OUTLET.outlet[k].name=decodeUtf8(new Uint8Array(h.buffer,g,l));g+=OUTLET_NAME_SIZE}d=0}else{console.log(" no outlet config")}if(c){c(b,a,d)}})}function get_outlet_rules(a,c,b,d){send_get(API_REQUEST_OUTLET_GET_RULES+"?oid="+a.toString()+"&rid="+c.toString()+"&count="+b.toString(),null,null,function(k){var j=null;if(k.response){var e=new Int32Array(k.response);if(e.length<(24/4)){switch(parseInt(e[0])){case 0:console.log("NO RULES");break;case -1:console.log(" getrules ERROR ");break;default:console.log("unknown status "+(parseInt(e[0])).toString())}if(d){d(a,parseInt(e[0]))}return}var f=new DataView(e.buffer);if(typeof OUTLET.outlet[a].rule!=="object"||OUTLET.outlet[a].rule===null){OUTLET.outlet[a].rule=[]}for(var g=c,m=0;(b-(g-c))>0;g++){OUTLET.outlet[a].rule[g]={};OUTLET.outlet[a].rule[g].flags=f.getUint32(m,true);m+=4;OUTLET.outlet[a].rule[g].condition_count=f.getUint32(m,true);m+=4;OUTLET.outlet[a].rule[g].date={};OUTLET.outlet[a].rule[g].date.flags=f.getUint32(m,true);m+=4;OUTLET.outlet[a].rule[g].date.start=f.getUint32(m,true);m+=4;OUTLET.outlet[a].rule[g].date.stop=f.getUint32(m,true);m+=4;OUTLET.outlet[a].rule[g].date.week_days=f.getUint32(m,true);m+=4;OUTLET.outlet[a].rule[g].condition=[];for(var h=0;h<OUTLET.outlet[a].rule[g].condition_count;h++){OUTLET.outlet[a].rule[g].condition[h]={};OUTLET.outlet[a].rule[g].condition[h].sensor_id=[];for(var l=0;l<8;l++){OUTLET.outlet[a].rule[g].condition[h].sensor_id[l]=f.getUint8(m,false);m++}OUTLET.outlet[a].rule[g].condition[h].type=f.getUint32(m,true);m+=4;OUTLET.outlet[a].rule[g].condition[h].flags=f.getUint32(m,true);m+=4;if(((OUTLET.outlet[a].rule[g].condition[h].type&SENSOR_TYPE_MASK)==SENSOR_TYPE_DAYTIME)||((OUTLET.outlet[a].rule[g].condition[h].type&SENSOR_TYPE_MASK)==SENSOR_TYPE_DATE)){OUTLET.outlet[a].rule[g].condition[h].val_beg=f.getUint32(m,true);m+=4;OUTLET.outlet[a].rule[g].condition[h].val_end=f.getUint32(m,true);m+=4}else{if(((OUTLET.outlet[a].rule[g].condition[h].type&SENSOR_TYPE_MASK)==SENSOR_TYPE_ONOFF)||((OUTLET.outlet[a].rule[g].condition[h].type&SENSOR_TYPE_MASK)==SENSOR_TYPE_ONOFF_CHANGED)){OUTLET.outlet[a].rule[g].condition[h].val_beg=f.getUint32(m,true);m+=4;OUTLET.outlet[a].rule[g].condition[h].val_end=f.getUint32(m,true);m+=4}else{OUTLET.outlet[a].rule[g].condition[h].val_beg=f.getFloat32(m,true);m+=4;OUTLET.outlet[a].rule[g].condition[h].val_end=f.getFloat32(m,true);m+=4}}}if(((e.buffer.byteLength-m)<6*4)||m>=e.buffer.byteLength){break}}j=0}else{console.log(" no rules received")}if(d){d(a,j)}})}function set_outlet_state(a,b,c){send_post(API_REQUEST_OUTLET_SET_STATE+"?oid="+a.toString()+"&state="+b.toString(),null,null,function(f){var e=null;if(f.response){var d=new Int32Array(f.response);if(d[0]<0){console.log(" error was occured while setting outlet state");e=parseInt(d[0])}else{console.log("outlet_state"+a+" = "+parseInt(d[0]));OUTLET.outlet[a].state=parseInt(d[0]);e=0}}if(c){c(a,e)}return})}function get_outlet_state(a,b){send_get(API_REQUEST_OUTLET_GET_STATE+"?oid="+a.toString(),null,null,function(e){var d=null;if(e.response){var c=new Int32Array(e.response);if(c[0]<0){console.log(" error was occured while getting outlet state");d=parseInt(c[0])}else{console.log("outlet"+a+"_state = "+c[0]);OUTLET.outlet[a].state=parseInt(c[0]);d=0}}if(b){b(a,d)}return})}function outlet_workstart(a){send_post(API_REQUEST_OUTLET_WORK_START,null,null,function(d){var c=null;if(d.response){var b=new Int32Array(d.response);switch(b[0]){case 0:OUTLET.state=1;console.log(" outlet start OK ");break;case -1:console.log(" outlet start ERROR ");break;default:console.log("unknown status "+(parseInt(b[0])).toString());break}c=b[0]}else{console.log(" no response on outlet start ")}if(a){a(c)}})}function outlet_workstop(a){send_post(API_REQUEST_OUTLET_WORK_STOP,null,null,function(d){var c=null;if(d.response){var b=new Int32Array(d.response);switch(b[0]){case 0:OUTLET.state=0;console.log(" outlet stop OK ");break;case -1:console.log(" outlet stop ERROR ");break;default:console.log("unknown status "+(parseInt(b[0])).toString());break}c=parseInt(b[0])}else{console.log(" no response on outlet stop ")}if(a){a(c)}})}function get_outlet_device_name(a){send_get(API_REQUEST_OUTLET_GET_DEVICE_NAME,null,null,function(f){var e=null;if(f.response){if(f.response.byteLength<=4){var c=new Int32Array(f.response);e=parseInt(c[0])}else{var d=new Uint8Array(f.response,0,OUTLET_NAME_SIZE);var b=0;while(b<OUTLET_NAME_SIZE&&d[b]!=0){b++}d=new Uint8Array(f.response,0,b);OUTLET.name=decodeUtf8(d);e=0}}else{console.log(" get_device_name: null answer")}if(a){a(e)}})}function set_outlet_device_name(b,d){if(typeof b!="string"){console.log("set_outlet_device_name: invalid name");if(d){calback(-1)}return}var c=new Uint8Array(OUTLET_NAME_SIZE);var a=new DataView(c.buffer);string_to_buffer(a,0,OUTLET_NAME_SIZE,b);send_post(API_REQUEST_OUTLET_SET_DEVICE_NAME,c,null,function(g){var f=null;if(g.response){var e=new Int32Array(g.response);f=parseInt(e[0]);switch(f){case 0:console.log("set_outlet_device_name: OK");OUTLET.name=b;break;default:console.log("set_outlet_device_name: ERROR "+f);break}}else{console.log(" set_device_name: null answer")}if(d){d(f)}})}function get_outlet_device_state(a){send_get(API_REQUEST_OUTLET_GET_DEVICE_STATE,null,null,function(d){var c=null;if(d.response){var b=new Int32Array(d.response);var e=new DataView(b.buffer);OUTLET.flags=e.getUint32(0,true);c=0}else{console.log(" get_device_state: null answer ")}if(a){a(c)}})}function outlet_send_setrule(f,j){if(typeof f.outlet_id!="number"||f.outlet_id>=OUTLET.outlet.length||typeof f.rule_id!="number"||f.rule_id<0){console.log("outlet_send_setrule: invalid setrule elements");if(j){j(null,null)}return}if(!f.rule.condition){f.rule.condition=[]}if(f.rule.condition_count>0){if(f.rule.condition_count!=f.rule.condition.length){f.rule.condition_count=f.rule.condition.length}}var a=(8+8+16+(24*f.rule.condition_count));var e=new Uint8Array(a);var b=new DataView(e.buffer);var h=0;b.setUint16(h,f.outlet_id,true);h+=2;b.setUint16(h,f.rule_id,true);h+=2;b.setUint32(h,f.doflag,true);h+=4;b.setUint32(h,f.rule.flags,true);h+=4;b.setUint32(h,f.rule.condition_count,true);h+=4;b.setUint32(h,f.rule.date.flags,true);h+=4;b.setUint32(h,f.rule.date.start,true);h+=4;b.setUint32(h,f.rule.date.stop,true);h+=4;b.setUint32(h,f.rule.date.week_days,true);h+=4;for(var d=0;d<f.rule.condition.length;d++){for(var g=0;g<8;g++){b.setUint8(h,f.rule.condition[d].sensor_id[g],false);h++}b.setUint32(h,f.rule.condition[d].type,true);h+=4;b.setUint32(h,f.rule.condition[d].flags,true);h+=4;if((f.rule.condition[d].type&SENSOR_TYPE_MASK)==SENSOR_TYPE_DAYTIME){b.setUint32(h,f.rule.condition[d].val_beg,true);h+=4;b.setUint32(h,f.rule.condition[d].val_end,true);h+=4}else{if((f.rule.condition[d].type&SENSOR_TYPE_MASK)==SENSOR_TYPE_ONOFF||(f.rule.condition[d].type&SENSOR_TYPE_MASK)==SENSOR_TYPE_ONOFF_CHANGED){b.setUint32(h,f.rule.condition[d].val_beg,true);h+=4;b.setUint32(h,f.rule.condition[d].val_end,true);h+=4}else{b.setFloat32(h,f.rule.condition[d].val_beg,true);h+=4;b.setFloat32(h,f.rule.condition[d].val_end,true);h+=4}}}send_post(API_REQUEST_OUTLET_SET_RULE,e,null,function(k){var i=null;if(k.response){var c=new Int32Array(k.response);switch(c[0]){case 0:if(OUTLET.outlet[f.outlet_id].rule.length<f.rule_id||f.doflag&OUTLET_RULE_APPEND){OUTLET.outlet[f.outlet_id].rule[OUTLET.outlet[f.outlet_id].rule.length]=f.rule}else{if(f.doflag&OUTLET_RULE_REPLACE){OUTLET.outlet[f.outlet_id].rule[f.rule_id]=f.rule}else{if(f.doflag&(OUTLET_RULE_INSERT|OUTLET_RULE_INSERT_BEFORE)){OUTLET.outlet[f.outlet_id].rule.splice(f.rule_id,0,f.rule)}else{if(f.doflag&(OUTLET_RULE_INSERT|OUTLET_RULE_INSERT_AFTER)){OUTLET.outlet[f.outlet_id].rule.splice((f.rule_id+1),0,f.rule)}}}}console.log(" setrule OK ");break;case -1:console.log(" setrule ERROR ");break;default:console.log(" unknown setrule status: "+c[0].toString());break}i=parseInt(c[0])}else{console.log(" no response on setrule command")}if(j){j(f.outlet_id,i)}})}function set_rule_date(f,c,b){var e={};e.flags=0;e.start=0;e.stop=0;e.week_days=0;if(f||c){e.start=parseInt(f);e.stop=parseInt(c);e.flags|=OUTLET_RULE_FLAG_DATE_ENABLE}if(b&&b.length==7){for(var a=0;a<7;a++){if(b[a]){e.week_days|=(1<<a)}}e.flags|=OUTLET_RULE_FLAG_WEEK_ENABLE}return e}function add_rule_time(f,h,e,a,g,d,c){if(!f||typeof f!="object"){f=[]}if(!e||typeof e!="object"||e.length!=8){console.log("add_rule_time: invalid syncid");return f}if(g!=null&&d!=null){var b={};switch(c){case"on":b.flags=OUTLET_RULE_FLAG_ON;break;case"off":b.flags=OUTLET_RULE_FLAG_OFF;break;default:console.log("add_rule_time: ERROR: state is unknown");return f}if(h==null){console.log("set priority flag as the default flag element");h="prio"}switch(h){case"and":b.flags|=OUTLET_RULE_FLAG_RULE_ALG_AND;break;case"or":b.flags|=OUTLET_RULE_FLAG_RULE_ALG_OR;break;case"prio":b.flags|=OUTLET_RULE_FLAG_RULE_ALG_PRIO;break;default:console.log('add_rule_time: ERROR: ALGORITHM "ON" is unknown');return f}switch(a){case"exact":b.flags|=OUTLET_RULE_FLAG_TIME_EXACT;break;case"interval":b.flags|=OUTLET_RULE_FLAG_TIME_INTERVAL;break;default:console.log("add_rule_time: ERROR: time ON variant is unknown");return f}b.type=SENSOR_TYPE_DAYTIME;b.sensor_id=e;b.val_beg=parseInt(g);b.val_end=parseInt(d);f[f.length]=b}else{console.log("add_rule_time: ERROR: time_begin and time_end must be defined")}return f}function add_rule_logic(g,h,a,c,e,b,f){if(!g||typeof g!="object"){g=[]}if(!c||typeof c!="object"||c.length!=8){console.log("add_rule_logic: invalid sensor_id");return g}if((a&SENSOR_TYPE_MASK)>SENSOR_TYPE_MAX){console.log("add_rule_logic: ERROR: invalid sensor type");return g}var d={};if(f==OUTLET_RULE_FLAG_ON){d.flags=OUTLET_RULE_FLAG_ON}else{if(f==OUTLET_RULE_FLAG_OFF){d.flags=OUTLET_RULE_FLAG_OFF}else{console.log("add_rule_logic: Nothing to do (ON/OFF)");return g}}if(g.length==0){console.log("add_rule_logic: set priority flag as the first element");h="prio"}switch(h){case"and":d.flags|=OUTLET_RULE_FLAG_RULE_ALG_AND;break;case"or":d.flags|=OUTLET_RULE_FLAG_RULE_ALG_OR;break;case"prio":d.flags|=OUTLET_RULE_FLAG_RULE_ALG_PRIO;break;default:console.log("add_rule_logic: ERROR: ALGORITHM is unknown");return g}switch(e){case"-1":break;case"off":d.flags|=OUTLET_RULE_FLAG_ONOFF_OFF;break;case"on":d.flags|=OUTLET_RULE_FLAG_ONOFF_ON;break;default:console.log("add_rule_logic: ERROR: value is unknown");return g}d.val_beg=parseInt(1<<b);d.val_end=0;d.type=parseInt(a);d.sensor_id=c;g[g.length]=d;return g}function add_rule_sensor(g,a,h,b,e,d,c,f){if(!g||typeof g!="object"){g=[]}if(!b||typeof b!="object"||b.length!=8){console.log("add_rule_sensor: invalid sensor_id");return g}if((h&SENSOR_TYPE_MASK)>SENSOR_TYPE_MAX){console.log("add_rule_sensor: ERROR: invalid sensor type");return g}var i={};switch(c){case"on":i.flags=OUTLET_RULE_FLAG_ON;break;case"off":i.flags=OUTLET_RULE_FLAG_OFF;break;default:console.log("add_rule_sensor: Nothing to do (ON/OFF)");return g}if(g.length==0){console.log("add_rule_sensor: set priority flag as the first element");a="prio"}switch(a){case"and":i.flags|=OUTLET_RULE_FLAG_RULE_ALG_AND;break;case"or":i.flags|=OUTLET_RULE_FLAG_RULE_ALG_OR;break;case"prio":i.flags|=OUTLET_RULE_FLAG_RULE_ALG_PRIO;break;default:console.log("add_rule_sensor: ERROR: ALGORITHM is unknown");return g}if(((h&SENSOR_TYPE_MASK)==SENSOR_TYPE_ONOFF)||((h&SENSOR_TYPE_MASK)==SENSOR_TYPE_ONOFF_CHANGED)){i.val_beg=parseInt(e);i.val_end=0}else{switch(f){case"up":i.flags|=OUTLET_RULE_FLAG_RISE;break;case"down":i.flags|=OUTLET_RULE_FLAG_FALL;break;default:console.log("add_rule_sensor: ERROR: ON vector is unknown");return g}i.val_beg=parseFloat(e);i.val_end=parseFloat(d)}i.type=parseInt(h);i.sensor_id=b;g[g.length]=i;return g}function set_outlet_rule(b,d,e,h,f,a,g){if(!OUTLET||!OUTLET.outlet||OUTLET.outlet.length==0){console.log("set_outlet_rule: get configuration first !!!");if(g){g(b,null)}return}if(typeof a!="object"||a.length==0||typeof f!="object"){console.log("set_outlet_rule: invalid arguments (date/sensors)");if(g){g(b,null)}return}var c={};if(typeof b!="number"||b<0||OUTLET.outlet.length<=b||typeof d!="number"||!e){console.log("set_outlet_rule: check arguments: outlet_id/rule_id/doflag");if(g){g(b,null)}return}if(d<0||d>100){d=0}switch(e){case"inafter":e=(OUTLET_RULE_INSERT_AFTER|OUTLET_RULE_INSERT);break;case"inbefore":e=(OUTLET_RULE_INSERT_BEFORE|OUTLET_RULE_INSERT);break;case"replace":e=OUTLET_RULE_REPLACE;break;case"append":default:e=OUTLET_RULE_APPEND;break}c.outlet_id=parseInt(b);c.rule_id=parseInt(d);c.doflag=e;c.rule={};c.rule.flags=0;c.rule.condition_count=a.length;c.rule.date=f||{};c.rule.condition=a||[];switch(h){case"and":c.rule.flags|=OUTLET_RULE_FLAG_RULE_ALG_AND;break;case"or":c.rule.flags|=OUTLET_RULE_FLAG_RULE_ALG_OR;break;case"prio":c.rule.flags|=OUTLET_RULE_FLAG_RULE_ALG_PRIO;break;default:console.log("add_rule_sensor: ERROR: ALGORITHM is unknown");return}outlet_send_setrule(c,g)}function delete_outlet_rule(a,b,c){if(typeof a!="number"||a>=OUTLET.length||a<0){console.log("delete_outlet_rule: invalid outlet ID");if(c){c(a,null)}return}if(typeof b!="number"||b>OUTLET.outlet[a].rule.length||b<0){console.log("delete_outlet_rule: invalid rule ID");if(c){c(a,null)}return}send_post(API_REQUEST_OUTLET_DELETE_RULE+"?oid="+a.toString()+"&rid="+b.toString(),null,null,function(f){var e=null;if(f.response){var d=new Int32Array(f.response);switch(d[0]){case 0:if(OUTLET.outlet[a].rule&&b<OUTLET.outlet[a].rule.length){OUTLET.outlet[a].rule[b]={};OUTLET.outlet[a].rule.splice(b,1)}console.log(" delrule OK ");break;case -1:console.log(" delrule ERROR ");break;default:console.log("unknown status "+(parseInt(d[0])).toString());break}e=parseInt(d[0])}if(c){c(a,e)}return})}function get_sensor_metric(a){send_get(API_REQUEST_SENSOR_GET_METRIC,null,null,function(h){var b=null;if(h.response){var f=new Uint8Array(h.response);if(f.length<132){console.log("ERROR: sensor metric length "+f.length.toString())}else{var e=0;var k=new DataView(f.buffer);SENSOR.sensor_bcast={};SENSOR.sensor_bcast.device_id=[];for(var m=0;m<8;m++){SENSOR.sensor_bcast.device_id[m]=k.getUint8(e,true);e++}var d=new Uint8Array(f.buffer,e,SENSOR_NAME_SIZE);var j=0;while(j<SENSOR_NAME_SIZE&&d[j]!=0){j++}d=new Uint8Array(f.buffer,e,j);SENSOR.sensor_bcast.name=decodeUtf8(d);e+=SENSOR_NAME_SIZE;SENSOR.sensor_bcast.sensor_count=k.getUint32(e,true);e+=4;SENSOR.sensor_bcast.metric=[];for(var g=0;g<SENSOR.sensor_bcast.sensor_count;g++){SENSOR.sensor_bcast.metric[g]={};SENSOR.sensor_bcast.metric[g].type=k.getUint32(e,true);e+=4;var l=(SENSOR.sensor_bcast.metric[g].type&SENSOR_TYPE_MASK);if(l==SENSOR_TYPE_DATE){SENSOR.sensor_bcast.metric[g].value=k.getUint32(e,true);e+=4}else{if(l==SENSOR_TYPE_DAYTIME){SENSOR.sensor_bcast.metric[g].value=k.getUint32(e,true);e+=4}else{if(l==SENSOR_TYPE_ONOFF||l==SENSOR_TYPE_ONOFF_CHANGED){SENSOR.sensor_bcast.metric[g].value=k.getUint32(e,true);e+=4}else{if(l==SENSOR_TYPE_RAW){SENSOR.sensor_bcast.metric[g].value=k.getFloat32(e,true);e+=4}else{SENSOR.sensor_bcast.metric[g].value=k.getFloat32(e,true);e+=4}}}}}b=0}}if(a){a(b)}return})}function get_sensor_config(a){send_get(API_REQUEST_SENSOR_GET_CONFIG,null,null,function(m){var d=null;if(m.response){var j=new Uint8Array(m.response);if(j.length<SENSOR_ADC_PINS_MAX*SENSOR_NAME_SIZE+SENSOR_LOGIC_PINS_MAX*SENSOR_NAME_SIZE){console.log("get sensor config: invalid config length")}else{var g=0;var b=new DataView(j.buffer);if(!SENSOR){SENSOR={}}SENSOR.device_id=[];for(var s=0;s<8;s++){SENSOR.device_id[s]=b.getUint8(g,true);g++}var e=new Uint8Array(j.buffer,8,SENSOR_NAME_SIZE);var p=0;while(p<SENSOR_NAME_SIZE&&e[p]!=0){p++}e=new Uint8Array(j.buffer,8,p);SENSOR.name=decodeUtf8(e);g+=SENSOR_NAME_SIZE;SENSOR.flags=b.getInt32(g,true);g+=4;SENSOR.altitude=b.getInt32(g,true);g+=4;SENSOR.stm32={};SENSOR.stm32.sensor_count=b.getUint16(g,true);g+=2;SENSOR.stm32.logic_count=b.getUint16(g,true);g+=2;SENSOR.stm32.adc_pin_count=b.getUint8(g,true);g+=1;SENSOR.stm32.aux_pin_count=b.getUint8(g,true);g+=1;SENSOR.stm32.i2c_address=b.getUint16(g,true);g+=2;SENSOR.stm32.flags=b.getUint32(g,true);g+=4;SENSOR.stm32.datetime={};SENSOR.stm32.datetime.utc=b.getUint32(g,true);g+=4;SENSOR.stm32.datetime.tz=b.getUint32(g,true);g+=4;SENSOR.stm32.meas_interval=b.getUint32(g,true);g+=4;SENSOR.stm32.altitude=b.getInt32(g,true);g+=4;SENSOR.stm32.adc=[];for(var l=0;l<SENSOR_ADC_PINS_MAX;l++){SENSOR.stm32.adc[l]={};SENSOR.stm32.adc[l].flags=b.getUint32(g,true);g+=4;SENSOR.stm32.adc[l].type=b.getUint32(g,true);g+=4;SENSOR.stm32.adc[l].resistor_down=b.getUint32(g,true);g+=4;SENSOR.stm32.adc[l].resistor_up=b.getUint32(g,true);g+=4;SENSOR.stm32.adc[l].sampletime=b.getUint8(g,true);g+=1;SENSOR.stm32.adc[l].meas_count=b.getUint8(g,true);g+=1;SENSOR.stm32.adc[l].aux_pin=[];for(var h=0;h<ADC_AUX_PIN_COUNT_MAX;h++){SENSOR.stm32.adc[l].aux_pin[h]=b.getUint8(g,true);g+=1}SENSOR.stm32.adc[l].temp_compensate_adc_pin=b.getUint8(g,true);g+=1;SENSOR.stm32.adc[l].phase_cnt=b.getInt16(g,true);g+=2;SENSOR.stm32.adc[l].phase_val=[];for(var o=0;o<ADC_MEASUREMENT_COUNT_MAX;o++){SENSOR.stm32.adc[l].phase_val[o]=b.getUint16(g,true);g+=2}SENSOR.stm32.adc[l].cal=[];for(var t=0;t<ADC_CALIBRATION_COUNT;t++){SENSOR.stm32.adc[l].cal[t]={};SENSOR.stm32.adc[l].cal[t].adc_val=b.getUint16(g,true);g+=2;SENSOR.stm32.adc[l].cal[t].val=b.getFloat32(g,true);g+=4}SENSOR.stm32.adc[l].ex={};if((SENSOR.stm32.adc[l].type&SENSOR_TYPE_MASK)==SENSOR_TYPE_EC){SENSOR.stm32.adc[l].ex.ec={};SENSOR.stm32.adc[l].ex.ec.pin_distance=(b.getFloat64(g,true));g+=8;g+=7;SENSOR.stm32.adc[l].ex.ec.ph_compensate_pin=b.getUint8(g,true);g+=1;SENSOR.stm32.adc[l].ex.ec.ppm_conv_factor=b.getUint16(g,true);g+=2}else{g+=(8+8+2)}}SENSOR.stm32.logic=[];for(var f=0;f<SENSOR_LOGIC_PINS_MAX/16;f++){SENSOR.stm32.logic[f]={};SENSOR.stm32.logic[f].flags=b.getUint32(g,true);g+=4;SENSOR.stm32.logic[f].state=b.getUint16(g,true);g+=2}SENSOR.adc_names=[];for(var q=0;q<SENSOR_ADC_PINS_MAX;q++){e=new Uint8Array(j.buffer,g,SENSOR_NAME_SIZE);p=0;while(p<SENSOR_NAME_SIZE&&e[p]!=0){p++}e=new Uint8Array(j.buffer,g,p);SENSOR.adc_names[q]=decodeUtf8(e);g+=SENSOR_NAME_SIZE}SENSOR.logic_names=[];for(var r=0;r<SENSOR_LOGIC_PINS_MAX;r++){e=new Uint8Array(j.buffer,g,SENSOR_NAME_SIZE);p=0;while(p<SENSOR_NAME_SIZE&&e[p]!=0){p++}e=new Uint8Array(j.buffer,g,p);SENSOR.logic_names[r]=decodeUtf8(e);g+=SENSOR_NAME_SIZE}SENSOR.digital_names=[];for(var k=0;k<SENSOR_DIGITAL_MAX;k++){e=new Uint8Array(j.buffer,g,SENSOR_NAME_SIZE);p=0;while(p<SENSOR_NAME_SIZE&&e[p]!=0){p++}e=new Uint8Array(j.buffer,g,p);SENSOR.digital_names[k]=decodeUtf8(e);g+=SENSOR_NAME_SIZE}d=0}}else{console.log(" no response on get sensor config command")}if(a){a(d)}return})}function set_sensor_altitude(a,b){if(typeof a!="number"){if(b){b(null)}return}send_post(API_REQUEST_SENSOR_SET_ALTITUDE+"?val="+a.toString(),null,null,function(e){var d=null;if(e.response){var c=new Int32Array(e.response);switch(c[0]){case 0:console.log(" setaltitude OK ");SENSOR.altitude=a;break;case -1:console.log(" setaltitude ERROR ");break;default:console.log("unknown status "+(parseInt(c[0])).toString());break}d=parseInt(c[0])}else{console.log(" no response on setaltitude ")}if(b){b(d)}})}function sensor_workstart(a){send_post(API_REQUEST_SENSOR_WORK_START,null,null,function(d){var c=null;if(d.response){var b=new Int32Array(d.response);switch(b[0]){case 0:console.log(" sensor start OK ");break;case -1:console.log(" sensor start ERROR ");break;default:console.log("unknown status "+(parseInt(b[0])).toString());break}c=parseInt(b[0])}else{console.log(" no response on sensor start ")}if(a){a(c)}})}function sensor_workstop(a){send_post(API_REQUEST_SENSOR_WORK_STOP,null,null,function(d){var c=null;if(d.response){var b=new Int32Array(d.response);switch(b[0]){case 0:console.log(" sensor stop OK ");break;case -1:console.log(" sensor stop ERROR ");break;default:console.log("unknown status "+(parseInt(b[0])).toString());break}c=parseInt(b[0])}else{console.log(" no response on sensor stop ")}if(a){a(c)}})}function set_sensor_config(e,q){if(!e){console.log("set_sensor_config: zero config length");if(q){q(-1)}return}var a=new ArrayBuffer(SENSOR_CONFIG_LENGTH);var f=new DataView(a);var d=0;for(var o=0;o<8;o++){f.setUint8(d,e.device_id[o]);d++}string_to_buffer(f,d,SENSOR_NAME_SIZE,e.sensor_name);d+=SENSOR_NAME_SIZE;f.setInt32(d,e.flags,true);d+=4;f.setInt32(d,e.altitude,true);d+=4;f.setUint16(d,e.stm32.sensor_count,true);d+=2;f.setUint16(d,e.stm32.logic_count,true);d+=2;f.setUint8(d,e.stm32.adc_pin_count,true);d+=1;f.setUint8(d,e.stm32.aux_pin_count,true);d+=1;f.setUint16(d,e.stm32.i2c_address,true);d+=2;f.setUint32(d,e.stm32.flags,true);d+=4;f.setUint32(d,e.stm32.datetime.utc,true);d+=4;f.setUint32(d,e.stm32.datetime.tz,true);d+=4;f.setUint32(d,e.stm32.meas_interval,true);d+=4;f.setInt32(d,e.stm32.altitude,true);d+=4;for(var j=0;j<e.stm32.adc_pin_count;j++){f.setUint32(d,e.stm32.adc[j].flags,true);d+=4;f.setUint32(d,e.stm32.adc[j].type,true);d+=4;f.setUint32(d,e.stm32.adc[j].resistor_down,true);d+=4;f.setUint32(d,e.stm32.adc[j].resistor_up,true);d+=4;f.setUint8(d,e.stm32.adc[j].sampletime,true);d+=1;f.setUint8(d,e.stm32.adc[j].meas_count,true);d+=1;for(var g=0;g<ADC_AUX_PIN_COUNT_MAX;g++){f.setUint8(d,e.stm32.adc[j].aux_pin[g],true);d+=1}f.setUint8(d,e.stm32.adc[j].temp_compensate_adc_pin,true);d+=1;f.setInt16(d,e.stm32.adc[j].phase_cnt,true);d+=2;for(var k=0;k<ADC_MEASUREMENT_COUNT_MAX;k++){f.setUint16(d,e.stm32.adc[j].phase_val[k],true);d+=2}for(var p=0;p<ADC_CALIBRATION_COUNT;p++){f.setUint16(d,e.stm32.adc[j].cal[p].adc_val,true);d+=2;f.setFloat32(d,e.stm32.adc[j].cal[p].val,true);d+=4}if((e.stm32.adc[j].type&SENSOR_TYPE_MASK)==SENSOR_TYPE_EC&&e.stm32.adc[j].ex&&e.stm32.adc[j].ex.ec){f.setFloat64(d,(e.stm32.adc[j].ex.ec.pin_distance/10),true);d+=8;d+=7;f.setUint8(d,e.stm32.adc[j].ex.ec.ph_compensate_pin,true);d+=1;f.setUint16(d,e.stm32.adc[j].ex.ec.ppm_conv_factor,true);d+=2}else{d+=(8+8+2)}}for(var b=0;b<parseInt((SENSOR_LOGIC_PINS_MAX+15)/16);b++){f.setUint32(d,e.stm32.logic[b].flags,true);d+=4;f.setUint16(d,e.stm32.logic[b].state,true);d+=2}for(var l=0;l<SENSOR_ADC_PINS_MAX;l++){string_to_buffer(f,d,SENSOR_NAME_SIZE,e.adc_names[l]);d+=SENSOR_NAME_SIZE}for(var m=0;m<((SENSOR_LOGIC_PINS_MAX+15)/16);m++){string_to_buffer(f,d,SENSOR_NAME_SIZE,e.logic_names[m]);d+=SENSOR_NAME_SIZE}for(var h=0;h<SENSOR_DIGITAL_MAX;h++){string_to_buffer(f,d,SENSOR_NAME_SIZE,e.digital_names[h]);d+=SENSOR_NAME_SIZE}send_post(API_REQUEST_SENSOR_SET_CONFIG,a,null,function(n){var i=null;if(n.response){var c=new Int32Array(n.response);switch(c[0]){case 0:SENSOR=e;console.log(" sensor setconfig OK ");break;case -1:console.log(" sensor setconfig ERROR ");break;default:console.log(" unknown sensor setconfig status: "+c[0].toString());break}i=parseInt(c[0])}else{console.log(" no response on sensor setconfig command")}if(q){q(i)}return});return}function set_adc_sensor_name(c,b,e){if(typeof c!="number"||c<0||c>SENSOR_ADC_PINS_MAX){console.log("** set_adc_sensor_name error: pin is invalid");if(e){e(adc_pin,-1)}return}if(typeof b!="string"){console.log("** set_adc_sensor_name error: name is invalid");if(e){e(adc_pin,-1)}return}var d=new Uint8Array(SENSOR_NAME_SIZE);var a=new DataView(d.buffer);string_to_buffer(a,0,SENSOR_NAME_SIZE,b);send_post(API_REQUEST_SENSOR_SET_ADC_NAME+"?pin="+c.toString(),d,null,function(h){var g=null;if(h.response){var f=new Int32Array(h.response);switch(f[0]){case 0:console.log(" setadcname OK ");SENSOR.adc_names[c]=b;break;case -1:console.log(" setadcname ERROR ");break;default:console.log(" unknown setadcname status: "+f[0].toString());break}g=parseInt(f[0])}else{console.log(" no response on setadcname command")}if(e){e(c,g)}})}function set_adc_pin(q,p,f,a,g,m,o){if(typeof q!="number"||q<0||q>SENSOR_ADC_PINS_MAX){console.log("** error: adc_pin is invalid");if(o){o(q,-1)}return}if(typeof a!="boolean"){console.log("** error: invalid state");if(o){o(q,-1)}return}p=parseInt(p);f=parseInt(f);m=parseInt(m);g=parseInt(g);if(typeof p!="number"||p<0||p>SENSOR_TYPE_MAX){p=SENSOR.stm32.adc[q].sensor_type}if(typeof f!="number"||f<0||f>SENSOR_ADC_PINS_MAX){f=SENSOR.stm32.adc[q].temp_compensate_adc_pin}var b=API_REQUEST_SENSOR_SET_ADC_PIN+"?pin="+q.toString();if(a>=0){b+="&state="+((a>0)?"1":"0").toString()}var j=new ArrayBuffer(SENSOR_ADC_CONFIG_LENGTH);var r=new DataView(j);var e=0;var k=(SENSOR.stm32.adc[q].resistor_down)?SENSOR.stm32.adc[q].resistor_down:4294967295;var c=(SENSOR.stm32.adc[q].resistor_up)?SENSOR.stm32.adc[q].resistor_up:4294967295;var d=SENSOR.stm32.adc[q].flags;r.setUint32(e,d,true);e+=4;r.setUint32(e,p,true);e+=4;r.setUint32(e,k,true);e+=4;r.setUint32(e,c,true);e+=4;r.setUint8(e,SENSOR.stm32.adc[q].sampletime,true);e+=1;r.setUint8(e,SENSOR.stm32.adc[q].meas_count,true);e+=1;for(var h=0;h<ADC_AUX_PIN_COUNT_MAX;h++){if(h===0){r.setUint8(e,q,true)}else{r.setUint8(e,SENSOR.stm32.adc[q].aux_pin[h],true)}e+=1}r.setUint8(e,f,true);e+=1;r.setInt16(e,SENSOR.stm32.adc[q].phase_cnt,true);e+=2;for(var i=0;i<ADC_MEASUREMENT_COUNT_MAX;i++){r.setUint16(e,SENSOR.stm32.adc[q].phase_val[i],true);e+=2}for(var l=0;l<ADC_CALIBRATION_COUNT;l++){r.setUint16(e,SENSOR.stm32.adc[q].cal[l].adc_val,true);e+=2;r.setFloat32(e,SENSOR.stm32.adc[q].cal[l].val,true);e+=4}if((p&SENSOR_TYPE_MASK)==SENSOR_TYPE_EC){if(!SENSOR.stm32.adc[q].ex){SENSOR.stm32.adc[q].ex={}}if(!SENSOR.stm32.adc[q].ex.ec){SENSOR.stm32.adc[q].ex.ec={}}if(typeof g!="number"||g<0){g=SENSOR.stm32.adc[q].ex.ec.ppm_conv_factor}if(typeof m!="number"||m<0){m=SENSOR.stm32.adc[q].ex.ec.pin_distance*10}r.setFloat64(e,parseFloat(m/10),true);e+=8;e+=7;r.setUint8(e,SENSOR.stm32.adc[q].ex.ec.ph_compensate_pin,true);e+=1;r.setUint16(e,g,true);e+=2}else{e+=(8+8+2)}send_post(b,j,null,function(u){var t=null;if(u.response){var n=new Int32Array(u.response);switch(n[0]){case 0:if(a==0){SENSOR.stm32.adc[q].state=0;SENSOR.stm32.adc[q].type=SENSOR_TYPE_NULL;SENSOR.stm32.adc[q].temp_compensate_adc_pin=0;if(!SENSOR.stm32.adc[q].ex){SENSOR.stm32.adc[q].ex={}}if(!SENSOR.stm32.adc[q].ex.ec){SENSOR.stm32.adc[q].ex.ec={}}SENSOR.stm32.adc[q].ex.ec.ppm_conv_factor=0;SENSOR.stm32.adc[q].ex.ec.pin_distance=0}else{SENSOR.stm32.adc[q].state=a;SENSOR.stm32.adc[q].type=p;SENSOR.stm32.adc[q].temp_compensate_adc_pin=f;if(!SENSOR.stm32.adc[q].ex){SENSOR.stm32.adc[q].ex={}}if(!SENSOR.stm32.adc[q].ex.ec){SENSOR.stm32.adc[q].ex.ec={}}SENSOR.stm32.adc[q].ex.ec.ppm_conv_factor=g;SENSOR.stm32.adc[q].ex.ec.pin_distance=parseFloat(m/10)}console.log(" set adc pin OK ");break;case -1:console.log(" set adc pin ERROR ");break;default:console.log(" unknown set adc pin status: "+n[0].toString());break}t=parseInt(n[0])}else{console.log(" no response on setadcpin command")}if(o){o(q,t)}})}function set_digital_sensor_name(e,b,d){if(typeof e!="number"||e<0){console.log("set_digital_sensor_name error: invalid digital id");if(d){d(-1)}return}var c=new Uint8Array(SENSOR_NAME_SIZE);var a=new DataView(c.buffer);string_to_buffer(a,0,SENSOR_NAME_SIZE,b);send_post(API_REQUEST_SENSOR_SET_DIGITAL_NAME+"?id="+e.toString(),c,null,function(h){var g=null;if(h.response){var f=new Int32Array(h.response);switch(f[0]){case 0:console.log(" setdigitalname OK ");SENSOR.digital_names[e]=b;break;case -1:console.log(" setdigitalname ERROR ");break;default:console.log(" unknown setdigitalname status: "+f[0].toString());break}g=parseInt(f[0])}else{console.log(" no response on setdigitalname command")}if(d){d(g)}})}function set_logic_pin(e,d,c,g){if(typeof e!="number"||parseInt(e)<0||parseInt(e)>SENSOR_LOGIC_PINS_MAX){console.log("set logic pin invalid argument pin");if(g){g(e,-1)}return}if(typeof c!="boolean"){console.log("set logic pin invalid argument enabled");if(g){g(e,-1)}return}var b=API_REQUEST_SENSOR_SET_LOGIC_PIN+"?pin="+e.toString()+"&enabled="+((c)?"1":"0");var f=null;if(typeof d=="string"){f=new Uint8Array(SENSOR_NAME_SIZE);var a=new DataView(f.buffer);string_to_buffer(a,0,SENSOR_NAME_SIZE,d);console.log("logic pin "+e.toString()+" name: "+d)}send_post(b,f,null,function(j){var i=null;if(j.response){var h=new Int32Array(j.response);switch(h[0]){case 0:if(!SENSOR.stm32.logic){SENSOR.stm32.logic=[]}if(!SENSOR.logic_names){SENSOR.logic_names=[]}if(typeof d=="string"){SENSOR.logic_names[e]=d}SENSOR.stm32.logic[e]=c;console.log(" set logic pin OK ");break;case -1:console.log(" set logic pin ERROR ");break;default:console.log(" unknown set logic pin status: "+h[0].toString());break}i=parseInt(h[0])}else{console.log(" no response on setlogicpin command")}if(g){g(e,i)}})}function set_sensor_device_name(b,d){if(typeof b!="string"){console.log("** set_sensor_device_name: invalid name type");if(d){d(-1)}return}var c=new Uint8Array(SENSOR_NAME_SIZE);var a=new DataView(c.buffer);string_to_buffer(a,0,SENSOR_NAME_SIZE,b);send_post(API_REQUEST_SENSOR_SET_DEVICE_NAME,c,null,function(g){var f=null;if(g.response){var e=new Int32Array(g.response);switch(e[0]){case 0:SENSOR.name=b;console.log(" setname OK ");break;case -1:console.log(" setname ERROR ");break;default:console.log(" unknown setname status: "+e[0].toString());break}f=parseInt(e[0])}else{console.log(" no response on setname command")}if(d){d(f)}})}function get_sensor_device_name(a){send_get(API_REQUEST_SENSOR_GET_DEVICE_NAME,null,null,function(e){var d=null;if(e.response){if(e.response.byteLength<=4){var b=new Int32Array(e.response);switch(b[0]){case 0:console.log(" null name ERROR ");break;case -1:console.log(" -1 name ERROR ");break;default:break}d=-1}else{var c=new Uint8Array(e.response);SENSOR.name=decodeUtf8(c);d=0}}else{console.log(" no response on getname command")}if(a){a(d)}})}function get_sensor_digital_name(b,a){if(typeof b!="number"){console.log("get_sensor_digital_name: invalid id");if(a){a(null)}return}send_get(API_REQUEST_SENSOR_GET_DIGITAL_NAME+"?id="+b.toString(),null,null,function(f){var e=null;if(f.response){if(f.response.byteLength<=4){var c=new Int32Array(f.response);switch(c[0]){case 0:console.log(" null name ERROR ");break;case -1:console.log(" -1 name ERROR ");break;default:break}e=-1}else{var d=new Uint8Array(f.response);SENSOR.digital_names[b]=decodeUtf8(d);e=0}}else{console.log(" no response on get digital name command")}if(a){a(e)}})}function get_sensor_adc_pin_name(a,b){if(typeof a!="number"){console.log("get_sensor_adc_pin_name: invalid pin");if(b){b(null)}return}send_get(API_REQUEST_SENSOR_GET_ADC_NAME+"?pin="+a.toString(),null,null,function(f){var e=null;if(f.response){if(f.response.byteLength<=4){var c=new Int32Array(f.response);switch(c[0]){case 0:console.log(" null name ERROR ");break;case -1:console.log(" -1 name ERROR ");break;default:break}e=-1}else{var d=new Uint8Array(f.response);SENSOR.adc_names[a]=decodeUtf8(d);e=0}}else{console.log(" no response on get adc pin name command")}if(b){b(e)}})}function get_sensor_logic_name(a,b){if(typeof a!="number"){console.log("get_sensor_logic_name: invalid pin");if(b){b(null)}return}send_get(API_REQUEST_SENSOR_GET_LOGIC_NAME+"?pin="+a.toString(),null,null,function(f){var e=null;if(f.response){if(f.response.byteLength<=4){var c=new Int32Array(f.response);switch(c[0]){case 0:console.log(" null name ERROR ");break;case -1:console.log(" -1 name ERROR ");break;default:break}e=-1}else{var d=new Uint8Array(f.response);SENSOR.logic_names[a]=decodeUtf8(d);e=0}}else{console.log(" no response on get logic pin name command")}if(b){b(e)}})}function set_adc_calibr(c,d,a,e){if(typeof c!="number"||c<0||c>=SUPPORTED_ADC_PINS){console.log("set_adc_calibr error: invalid adc_pin");if(e){e(-1)}return}if(d!=null){d=d.replace(",",".").replace("[^0-9.]","")}var b=API_REQUEST_SENSOR_SET_ADC_CALIBR+"?";switch(a){case"start":b+="start=1&";break;case"finish":b+="finish=1&";break;case"clear":b+="start=1&finish=1&";break}b+="pin="+c.toString();if(d!=null){b+="&value="+d.toString()}send_post(b,null,null,function(h){var g=null;if(h.response){var f=new Int32Array(h.response);switch(f[0]){case 0:console.log(" set adc calibr OK ");break;case -1:console.log(" set adc calibr ERROR ");break;default:console.log(" unknown set adc calibr status: "+f[0].toString());break}g=parseInt(f[0])}else{console.log(" no response on setconfig command")}if(e){e(g)}})}function get_system_info(a){send_get(API_REQUEST_SYSTEM_GET_INFO,null,null,function(h){var g=null;if(h.response){var c=new Uint8Array(h.response);if(c.length<4){console.log(" get system info: invalid info length");g=-1}else{if(c.length<12){console.log(" get system info: error occured");g=parseInt(c[0])}else{var f=new DataView(c.buffer);var j=0;DEVICE.info={};DEVICE.info.heap_size=f.getUint32(j,true);j+=4;DEVICE.info.fs={};DEVICE.info.fs.fs_total=f.getUint32(j,true);j+=4;DEVICE.info.fs.fs_used=f.getUint32(j,true);j+=4;DEVICE.info.fs.fs_avail=f.getUint32(j,true);j+=4;DEVICE.info.fs.file_count=f.getUint32(j,true);j+=4;DEVICE.info.fs.file=[];for(var e=0;e<DEVICE.info.fs.file_count;e++){DEVICE.info.fs.file[e]={};var d=new Uint8Array(f.buffer,j,32);var b=0;while(b<32&&d[b]!=0){b++}d=new Uint8Array(f.buffer,j,b);DEVICE.info.fs.file[e].name=decodeUtf8(d);j+=32;DEVICE.info.fs.file[e].size=f.getUint32(j,true);j+=4}g=0}}}else{console.log(" no response on system getinfo command")}if(a){a(g)}})}function set_system_controller(a,j){if(typeof a!="string"){console.log("set_system_controller: no URL");if(j){calback(-1)}return}var h=/([^:\/]*):*\/*([^:\/]*)\/*(.*)$/;if(a.indexOf("://")==-1){h=/([^\/]*)\/*(.*)$/}var c=h.exec(a);if(c==null){console.log("set_system_controller: invalid URL");if(j){calback(-1)}return}var d=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];var e=80;var b="";var k="";var g=1;if(a.indexOf("://")!==-1){if(c[g]!="http"){console.log('set_system_controller: unknown protocol "'+c[g]+'"; HTTP will be set by default')}g++}if(!c[g]||c[g]==""){console.log("set_system_controller: no domain in URL");return}b=c[g];g++;if(c[g]){k=c[g];if(k.indexOf("/",k.length-1)==-1){k+="/"}}var f=system_create_device_config_copy(DEVICE);for(var g=0;g<16;g++){f.controller.ipaddr[g]=d[g]}f.controller.port=e;f.controller.name=b;f.controller.path=k;set_system_device_config(f,j)}function set_system_device_config(a,f){if(typeof a!="object"){console.log("set_system_device_config: invalid config argument");if(f){calback(-1)}return}var e=new Uint8Array(DEVICE_CONFIG_SIZE);var c=new DataView(e.buffer);var d=0;for(var b=0;b<8;b++){c.setUint8(d,a.id[b],true);d+=1}c.setUint32(d,a.type,true);d+=4;c.setUint32(d,a.state,true);d+=4;string_to_buffer(c,d,128,a.name);d+=128;c.setUint16(d,a.http_port,true);d+=2;c.setUint16(d,a.metric_port,true);d+=2;c.setUint16(d,a.ap_name_port,true);d+=2;c.setUint16(d,a.sta_name_port,true);d+=2;c.setUint32(d,a.work_interval,true);d+=4;for(var b=0;b<16;b++){if(b<4){c.setUint8(d,a.controller.ipaddr[b],true)}else{c.setUint8(d,0,true)}d+=1}c.setUint16(d,a.controller.port,true);d+=2;string_to_buffer(c,d,128,a.controller.name);d+=128;string_to_buffer(c,d,128,a.controller.path);d+=128;send_post(API_REQUEST_SYSTEM_SET_DEVICE_CONFIG,e,null,function(i){var h=null;if(i.response){var g=new Int32Array(i.response);h=parseInt(g[0]);switch(h){case 0:console.log("set_system_controller: OK");DEVICE.id=a.id;DEVICE.type=a.type;DEVICE.state=a.state;DEVICE.name=a.name;DEVICE.http_port=a.http_port;DEVICE.metric_port=a.metric_port;DEVICE.ap_name_port=a.ap_name_port;DEVICE.sta_name_port=a.sta_name_port;DEVICE.work_interval=a.work_interval;DEVICE.controller.ipaddr=a.controller.ipaddr;DEVICE.controller.port=a.controller.port;DEVICE.controller.name=a.controller.name;DEVICE.controller.path=a.controller.path;break;default:console.log("set_system_controller: ERROR "+h);break}}else{console.log(" set_system_controller: null answer")}if(f){f(h)}})}function get_system_device_config(a){send_get(API_REQUEST_SYSTEM_GET_DEVICE_CONFIG,null,null,function(f){var b=null;if(f.response){var e=new Uint8Array(f.response);if(e.length<4){console.log("get system controller: invalid controller length");b=-1}else{if(e.length<8){console.log(" get system controller: error occured");b=parseInt(e[0])}else{var j=new DataView(e.buffer);var d=0;DEVICE.id=[];for(var g=0;g<8;g++){DEVICE.id[g]=j.getUint8(d,true);d+=1}DEVICE.type=j.getUint32(d,true);d+=4;DEVICE.state=j.getUint32(d,true);d+=4;var c=new Uint8Array(e.buffer,d,128);var h=0;while(h<128&&c[h]!=0){h++}c=new Uint8Array(e.buffer,d,h);DEVICE.name=decodeUtf8(c);d+=128;DEVICE.http_port=j.getUint16(d,true);d+=2;DEVICE.metric_port=j.getUint16(d,true);d+=2;DEVICE.ap_name_port=j.getUint16(d,true);d+=2;DEVICE.sta_name_port=j.getUint16(d,true);d+=2;DEVICE.work_interval=j.getUint32(d,true);d+=4;DEVICE.controller={};DEVICE.controller.ipaddr=[];for(var g=0;g<16;g++){DEVICE.controller.ipaddr[g]=(g<4)?j.getUint8(d,true):0;d+=1}DEVICE.controller.port=j.getUint16(d,true);d+=2;var c=new Uint8Array(e.buffer,d,128);var h=0;while(h<128&&c[h]!=0){h++}c=new Uint8Array(e.buffer,d,h);DEVICE.controller.name=decodeUtf8(c);d+=128;var k=new Uint8Array(e.buffer,d,128);var h=0;while(h<128&&k[h]!=0){h++}k=new Uint8Array(e.buffer,d,h);DEVICE.controller.path=decodeUtf8(k);d+=128;b=0}}}else{console.log(" no response on system get controller command")}if(a){a(b)}})}function get_system_errlog(a){send_get(API_REQUEST_SYSTEM_GET_ERRLOG,null,null,function(h){var c=null;if(h.response){var g=new Uint8Array(h.response);if(g.length<4){console.log("get system errlog: invalid errlog length");c=-1}else{if(g.length==4){c=g[0]}else{if(g.length<8){console.log(" get system errlog: error occured");c=parseInt(g[0])}else{var k=new DataView(g.buffer);DEVICE.errlog=[];for(var e=0,j=0;e<k.byteLength;j++){var m=k.getUint32(e,true);e+=4;var b=k.getUint32(e,true);e+=4;var l=new Date();var f=l.getTimezoneOffset()*60;l=new Date((m*1000)-f);DEVICE.errlog[j]={};DEVICE.errlog[j].datetime=l.toLocaleString();DEVICE.errlog[j].errcode=b}c=0}}}}else{console.log(" no response on system geterrlog command")}if(a){a(c)}})}function get_system_runlog(a){send_get(API_REQUEST_SYSTEM_GET_RUNLOG,null,null,function(f){var g=null;if(f.response){var e=new Uint8Array(f.response);if(e.length<4){console.log("get system runlog: invalid runlog length");g=-1}else{if(e.length<8){console.log("get system errlog: error occured");g=e[0]}else{var m=new DataView(e.buffer);DEVICE.runlog=[];for(var b=0,h=0;b<m.byteLength;h++){var l=m.getUint32(b,true);b+=4;var j=m.getUint32(b,true);b+=4;var k=new Date();var c=k.getTimezoneOffset()*60;k=new Date((l*1000)-c);DEVICE.runlog[h]={};DEVICE.runlog[h].datetime=k.toLocaleString();DEVICE.runlog[h].reason=j}g=0}}}else{console.log(" no response on system getrunlog command")}if(a){a(g)}})}function clear_system_logs(a){send_post(API_REQUEST_SYSTEM_GET_CLEAR_LOGS,null,null,function(d){var c=null;if(d.response){var b=new Int32Array(d.response);switch(b[0]){case 0:DEVICE.runlog=[];DEVICE.errlog=[];console.log(" system clear logs OK ");break;case -1:console.log(" system clear logs ERROR ");break;default:console.log(" unknown system clear logs status: "+b[0].toString());break}c=parseInt(b[0])}else{console.log(" no response on system clear logs command")}if(a){a(c)}})}function set_system_metric_port(a,b){if(!a||a<METRIC_PORT_MIN||a>METRIC_PORT_MAX){console.log("invalid metric port");return -1}send_post(API_REQUEST_SYSTEM_SET_METRIC_PORT+"?port="+a.toString(),null,null,function(e){var d=null;if(e.response){var c=new Int32Array(e.response);switch(c[0]){case 0:console.log(" system metric port set to "+a.toString()+" OK ");break;case -1:console.log(" system metric port ERROR ");break;default:console.log(" unknown system metric port status: "+c[0].toString());break}d=parseInt(c[0])}else{console.log(" no response on system metric port command")}if(b){b(d)}});return 0}function set_system_datetime(f,e,c){var b=new Date();f=parseInt(f);e=parseInt(e);if(typeof f!=="number"||f<=0){f=(b.getTime()/1000)}if(typeof e!=="number"){e=b.getTimezoneOffset()*60}b.setTime(f*1000);var a=new DataView(new Uint32Array(2).buffer);a.setUint32(0,parseInt(b.getTime()/1000),true);a.setUint32(4,parseInt(e),true);send_post(API_REQUEST_SYSTEM_SET_DATETIME,a,null,function(h){var g=null;if(h.response){var d=new Int32Array(h.response);switch(d[0]){case 0:console.log(" setdatetime OK ");break;case -1:console.log(" setdatetime ERROR ");break;default:console.log("unknown status "+(parseInt(d[0])).toString());break}g=parseInt(d[0])}else{console.log(" no response on setdatetime ")}if(c){c(g)}})}function set_system_mode(b,c){var a=system_create_device_config_copy(DEVICE);if(b==="controller_on"){if(a.state&DEVICE_STATE_MODE_CTL){return}a.state|=DEVICE_STATE_MODE_CTL}else{if(b==="controller_off"){if(~a.state&DEVICE_STATE_MODE_CTL){return}a.state&=~DEVICE_STATE_MODE_CTL}else{if(b==="autonomus_auto"){if(a.state&DEVICE_STATE_MODE_AUTO){return}a.state|=DEVICE_STATE_MODE_AUTO}else{if(b==="autonomus_manual"){if(~a.state&DEVICE_STATE_MODE_AUTO){return}a.state&=~DEVICE_STATE_MODE_AUTO}else{console.log("set_system_mode: invalid mode")}}}}set_system_device_config(a,function(d){if(d==0){DEVICE.state=a.state}if(c){c(d)}})}function wifi_config(d,a,i,h,g,f,b,c,e,j){if(d!="sta"&&d!="ap"){console.log(" invalid mode ");return -1}if(!a||a.length<8||a.length>32){console.log(" invalid ssid ");return -1}if(i&&(i.length<8||i.length>63)){console.log(" invalid password ");return -1}if(h&&(h.length<4||h.length>63)){console.log(" invalid hostname ");return -1}if(f&&(f.length<7||f.length>15)){console.log(" invalid ip ");return -1}if(b&&(b.length<7||b.length>15)){console.log(" invalid netmask ");return -1}send_post(API_REQUEST_WIFI_SET_CONFIG+"?mode="+d.toString()+"&ssid="+a.toString()+((i)?"&pass="+i.toString():"")+((h)?"&hostname="+h.toString():"")+((f)?"&ip="+f.toString():"")+((b)?"&netmask="+b.toString():"")+"&now="+((c)?"1":"0")+"&default="+((e)?"1":"0"),null,2000,j);return 0}function load_new_interface(a,b){if(!a){console.log("file not loaded");alert("Пожалуйста, выберите файл");return}if(a.size<=0){console.log("invalid file size");alert("Размер выбранного файла невозможно определить");return}if(a.name!=="iface.js"&&a.name!=="iface.gz"){console.log("file name: "+a.name);alert('Файл выбран не правильный. Пожалуйста, скачайте правильные файлы "iface.js" и "iface.gz". Оба файла должны быть сжаты (gzip).');return}send_post("file_write?name="+a.name+"&offset=0&length="+a.size,a,null,function(e){if(e){var d=null;if(e.response){var c=new Int32Array(e.response);switch(c[0]){case 0:console.log(" setdatetime OK ");break;case -1:console.log(" setdatetime ERROR ");break;default:console.log("unknown status "+(parseInt(c[0])).toString());break}d=parseInt(c[0])}else{console.log(" no response on setdatetime ")}}else{d=null}if(b){b(d)}})}function system_fsformat(){send_post("system_fsformat",null,null,null)}var s_nav_btn_title_outlet="Перейти к выключателям";var s_nav_btn_title_sensor="Перейти к датчикам";var s_nav_btn_title_system="Перейти к общим настройкам";var s_error_code="Ошибка, устройство вернуло: ";if(typeof under_controller=="undefined"){under_controller=false}var SERVICE_INTERVAL=(under_controller)?5000:10000;var service_interval=null;var service_function=null;function start_service(a){service_function=a}function stop_service(a){service_function=null}function system_service(){if(service_function!==null){service_function()}}function system_service_start(){if(service_interval){clearInterval(service_interval);service_interval=null}service_interval=setInterval(system_service,SERVICE_INTERVAL)}function copyright(b){var a="margin:20px; font-size:30px; font-weight:bold; font-style:italic; color:#FFF;";var d=document.createElement("div");d.setAttribute("style",a);var c=document.createElement("a");c.setAttribute("href","http://управляйка.рф");c.setAttribute("target","_blank");c.setAttribute("style",a);c.innerHTML="Управляйка.РФ";d.innerHTML="&copy;&emsp;";d.appendChild(c);b.appendChild(d)}function is_logic_pin_enabled(b,a){if(b==null||b<0||a==null){return 0}return((a&((1<<(b%16))<<16))?1:0)}function is_local_logic_pin_enabled(a){if(!SENSOR||!SENSOR.stm32||!SENSOR.stm32.logic||SENSOR.stm32.logic.length<=0){console.log("logic pins disabled at all!");return}var b=(SENSOR.stm32.logic[parseInt(a/16)].flags&((1<<(parseInt(a%16)))<<16));return b}function string_to_buffer(c,g,d,f){var a=encodeUtf8(f);var e=new Uint8Array(a);for(var b=0,h=g;b<e.byteLength&&b<d-1;b++){c.setUint8(h,e[b],false);h+=1}}var wait_for_response_limit=0;function wait_for_response(a,c){wait_for_response_limit=0;var b=new XMLHttpRequest();b.open("GET","q?response="+a.toString(),true);b.responseType="arraybuffer";b.timeout=30000;b.onload=function(d){var e=new Uint32Array(b.response);if(e.byteLength==0&&wait_for_response_limit<60){wait_for_response_limit++;setTimeout(function(){wait_for_response(a,c)},1000)}else{if(c){console.log(" controller get response OK");c(b)}}};b.onerror=function(d){console.log(" controller get error");if(c){c(null)}};b.send(null)}function send_post(a,c,b,e){var d=new XMLHttpRequest();d.open("POST",a,true);d.responseType="arraybuffer";if(!b){b=30000}d.timeout=b;d.onload=function(f){if(under_controller){var g=new Uint32Array(d.response);if(g.byteLength==4){console.log("wait_for_response: error code returned: "+g[0])}else{if(g.byteLength==8){console.log("wait_for_response: response id returned: "+g[1]);setTimeout(function(){wait_for_response(g[1],e)},1000)}}}else{if(e){e(d)}}};d.onerror=function(f){console.log(" post error");if(e){e(null)}};d.send(c)}function send_get(a,c,b,e){var d=new XMLHttpRequest();d.open("GET",a,true);d.responseType="arraybuffer";if(!b){b=30000}d.timeout=b;d.onload=function(f){if(e){e(d)}};d.onerror=function(f){console.log(" get error")};d.send(c)}function decodeUtf8(f){var a="";var d=0;var g=0;var e=0;var b=0;if(f.length>=3&&f[0]===239&&f[1]===187&&f[2]===191){d=3}while(d<f.length){g=f[d];if(g<128){a+=String.fromCharCode(g);d++}else{if(g>191&&g<224){if(d+1>=f.length){throw"UTF-8 Decode failed. Two byte character was truncated."}b=f[d+1];a+=String.fromCharCode(((g&31)<<6)|(b&63));d+=2}else{if(d+2>=f.length){throw"UTF-8 Decode failed. Multi byte character was truncated."}b=f[d+1];c3=f[d+2];a+=String.fromCharCode(((g&15)<<12)|((b&63)<<6)|(c3&63));d+=3}}}return a}function encodeUtf8(f){if(/[\u0080-\uffff]/.test(f)){var b=new Array(f.length);for(var e=0,d=0,a=f.length;e<a;++e){var g=f.charCodeAt(e);if(g<128){b[d++]=g}else{if(g<2048){b[d++]=(g>>6)|192}else{b[d++]=(g>>12)|224;b[d++]=((g>>6)&63)|128}b[d++]=(g&63)|128}}var c=new Uint8Array(b)}else{var c=new Uint8Array(f.length);for(var e=f.length;e--;){c[e]=f.charCodeAt(e)}}return c.buffer}function create_element_img(h,d,g,e,f,b,a){if(!h||typeof h!=="string"){console.log("cannot create IMG element: id is not string");return null}var c=document.getElementById(h);if(!c){c=document.createElement("img")}c.setAttribute("id",((typeof h==="string")?h:""));c.setAttribute("class",((typeof d==="string")?d:""));c.setAttribute("title",((typeof g==="string")?g:""));c.setAttribute("alt",((typeof e==="string")?e:""));c.setAttribute("src",((typeof f==="string")?f:""));if(typeof b==="function"){c.addEventListener("click",b,false)}else{if(typeof b==="string"){c.setAttribute("onclick",b)}}if(a!==null&&typeof a==="object"){a.appendChild(c)}return c}function create_element_div(h,f,g,b,c,a){if(!h||typeof h!=="string"){console.log("cannot create DIV element: id is not string");return null}var e=document.getElementById(h);if(e){for(var d=e.childNodes.length-1;d>=0;d--){e.removeChild(e.childNodes[d])}}else{e=document.createElement("div")}e.setAttribute("id",((typeof h==="string")?h:""));e.setAttribute("class",((typeof f==="string")?f:""));e.setAttribute("title",((typeof g==="string")?g:""));e.innerHTML=((typeof b==="string")?b:"");if(typeof c==="function"){e.addEventListener("click",c,false)}else{if(typeof c==="string"){e.setAttribute("onclick",c)}}if(a!==null&&typeof a==="object"){a.appendChild(e)}return e}function remove_element(b){if(!b||typeof b!=="string"){console.log("cannot remove element: id is not string");return false}var a=document.getElementById(b);if(a){a.parentNode.removeChild(a);return true}return false}function create_progress(){create_element_div("progress_background","progress_background",null,"<h1>Подождите ...</h1>",null,document.body)}function remove_progress(){remove_element("progress_background")}function get_image_src(a){if(typeof a!=="number"){console.log("cannot get image source from unknown device type: device type is not a number");return null}switch(a){case DEVICE_TYPE_OUTLET:return tar_get_image_src(img_prefix+"outlets_page.png");case DEVICE_TYPE_SENSOR:return tar_get_image_src(img_prefix+"sensors_page.png");case 0:return tar_get_image_src(img_prefix+"system_page.png")}console.log("cannot get image source from unknown device type: unknown type of device");return null}function create_navigation_panel(c){if(typeof c!=="number"){console.log("cannot create navigation panel for unknown device type (device_type is not a number)");return null}var d=create_element_div("navigation_panel","navigation_panel",null,null,null,null);if(!d){return null}if(c&DEVICE_TYPE_OUTLET){var b=create_element_div("navigation_btn_outlet","navigation_btn",null,null,outlet_update,d);if(b){var a=create_element_img("navigation_img_outlet","navigation_img",s_nav_btn_title_outlet,"outlets page",get_image_src(DEVICE_TYPE_OUTLET),null,b);if(!a){console.log("cannot create navigation button image: outlet")}}else{console.log("cannot create navigation button: outlet")}}if(c&DEVICE_TYPE_SENSOR){var b=create_element_div("navigation_btn_sensor","navigation_btn",null,null,sensor_update,d);if(b){var a=create_element_img("navigation_img_sensor","navigation_img",s_nav_btn_title_sensor,"sensors page",get_image_src(DEVICE_TYPE_SENSOR),null,b);if(!a){console.log("cannot create navigation button image: sensor")}}else{console.log("cannot create navigation button: sensor")}}var b=create_element_div("navigation_btn_system","navigation_btn",null,null,system_update,d);if(b){var a=create_element_img("navigation_img_system","navigation_img",s_nav_btn_title_system,"system page",get_image_src(0),null,b);if(!a){console.log("cannot create navigation button image: system")}}else{console.log("cannot create navigation button: system")}return d}function navigation_page_select(c){var b;var a;a="navigation_btn_outlet";b=document.getElementById(a);if(c===a){b.setAttribute("class","navigation_btn_selected")}else{b.setAttribute("class","navigation_btn")}a="navigation_btn_sensor";b=document.getElementById(a);if(c===a){b.setAttribute("class","navigation_btn_selected")}else{b.setAttribute("class","navigation_btn")}a="navigation_btn_system";b=document.getElementById(a);if(c===a){b.setAttribute("class","navigation_btn_selected")}else{b.setAttribute("class","navigation_btn")}}function outlet_update(){navigation_page_select("navigation_btn_outlet");outlet_page_create()}function sensor_update(){navigation_page_select("navigation_btn_sensor");sensor_page_create()}function system_update(){navigation_page_select("navigation_btn_system");system_page_create()}var s_btn_save_title="Сохранить";var s_btn_save="Сохранить";var s_btn_close_title="Закрыть окно";var s_btn_close="Закрыть";var s_btn_cancel_title="Отмена";var s_btn_cancel="Отмена";function create_editor(c){var a=create_element_div("editor","editor",null,null,null,document.body);if(!a){console.log("editor");return}var b=create_element_div("editor_header","editor_header",null,c,null,a);return a}function remove_editor(){remove_element("editor")}function edit_name(h,d,c,g){var b=create_editor(h);var f=document.createElement("input");f.setAttribute("id","editor_name");f.setAttribute("type","text");f.setAttribute("class","editor_name");f.setAttribute("value",d);b.appendChild(f);var a=create_element_div("btn_cancel","btn_cancel",s_btn_cancel_title,s_btn_cancel,g,b);var e=create_element_div("btn_save","btn_save",s_btn_save_title,s_btn_save,function(){var i=document.getElementById("editor_name").value;c(i)},b);f.focus()}function edit_time(n,c,e,j,l){var g=create_editor(n);var s=new Date();if(typeof u!=="number"){e=s.getTimezoneOffset()*60}if(typeof c!=="number"||c<0){c=((s.getTime()-e)/1000)}s=new Date(c*1000);var k=s.getHours();var a=s.getMinutes();var m=c-((k*3600+a*60)+e);var v=document.createElement("select");v.setAttribute("id","editor_tz");v.setAttribute("class","editor_tz");for(var o=0;o<27;o++){var b=document.createElement("option");var u=((-14+o)*3600);b.setAttribute("value",u);if(parseInt(u)==parseInt(e)){b.setAttribute("selected","true")}b.innerHTML="GMT "+((u<0)?"+":"")+(-u/3600).toString();v.appendChild(b)}g.appendChild(v);var h=document.createElement("select");h.setAttribute("id","editor_hh");h.setAttribute("class","editor_hh");for(var o=0;o<24;o++){var b=document.createElement("option");var f=("0"+o.toString()).slice(-2);b.setAttribute("value",f);if(parseInt(f)==parseInt(k)){b.setAttribute("selected","true")}b.innerHTML=f;h.appendChild(b)}g.appendChild(h);g.innerHTML+="<b> : </b>";var r=document.createElement("select");r.setAttribute("id","editor_mm");r.setAttribute("class","editor_mm");for(var o=0;o<60;o++){var b=document.createElement("option");var p=("0"+o.toString()).slice(-2);b.setAttribute("value",p);if(parseInt(p)==parseInt(a)){b.setAttribute("selected","true")}b.innerHTML=p;r.appendChild(b)}g.appendChild(r);g.appendChild(document.createElement("br"));var q=create_element_div("btn_cancel","btn_cancel",s_btn_cancel_title,s_btn_cancel,l,g);var t=create_element_div("btn_save","btn_save",s_btn_save_title,s_btn_save,function(){var x=document.getElementById("editor_tz").value;var d=document.getElementById("editor_hh").value;var i=document.getElementById("editor_mm").value;var w=(parseInt(m)+((parseInt(d)*3600+parseInt(i)*60)+parseInt(x)));if(w<0){w=0}j(w)},g)}function outlet_create_rule_copy(a,d){var e=null;if((typeof a==="number"&&a>=0&&a<OUTLET.outlet.length)&&(typeof d==="number"&&d>=0&&d<OUTLET.outlet[a].rule.length)){e=OUTLET.outlet[a].rule[d]}var f={};f.flags=0;f.condition_count=0;f.condition=[];f.date={};f.date.flags=0;f.date.start=0;f.date.stop=0;f.date.week_days=127;if(e){f.flags=e.flags;f.condition_count=e.condition_count;f.date.flags=e.date.flags;f.date.start=e.date.start;f.date.stop=e.date.stop;f.date.week_days=e.date.week_days;for(var g=0;g<f.condition_count;g++){f.condition[g]={};f.condition[g].sensor_id=[];for(var b=0;b<e.condition[g].sensor_id.length;b++){f.condition[g].sensor_id[b]=e.condition[g].sensor_id[b]}f.condition[g].type=e.condition[g].type;f.condition[g].flags=e.condition[g].flags;f.condition[g].val_beg=e.condition[g].val_beg;f.condition[g].val_end=e.condition[g].val_end}}return f}function outlet_create_condition_copy(c){var b={};b.sensor_id=[];b.type=SENSOR_TYPE_NULL;b.flags=0;b.val_beg=0;b.val_end=0;if(typeof c==="object"&&c!==null){for(var a=0;a<8;a++){b.sensor_id[a]=c.sensor_id[a]}b.type=c.type;b.flags=c.flags;b.val_beg=c.val_beg;b.val_end=c.val_end}return b}function system_create_device_config_copy(a){device_config={};device_config.id=[];if(typeof a==="object"&&a!==null){for(var b=0;b<8;b++){device_config.id[b]=a.id[b]}device_config.type=a.type;device_config.state=a.state;device_config.name=a.name;device_config.http_port=a.http_port;device_config.metric_port=a.metric_port;device_config.ap_name_port=a.ap_name_port;device_config.sta_name_port=a.sta_name_port;device_config.work_interval=a.work_interval;device_config.controller={};device_config.controller.ipaddr=[];for(var b=0;b<16;b++){device_config.controller.ipaddr[b]=a.controller.ipaddr[b]}device_config.controller.port=a.controller.port;device_config.controller.name=a.controller.name;device_config.controller.path=a.controller.path}else{device_config.type=0;device_config.state=0;device_config.name="";device_config.http_port=0;device_config.metric_port=0;device_config.ap_name_port=0;device_config.sta_name_port=0;device_config.work_interval=0;device_config.controller={};device_config.controller.ipaddr=[];device_config.controller.port=0;device_config.controller.name="";device_config.controller.path=""}return device_config}var s_outlet_no_outlets="Электроприборов не обнаружено";var s_outlet_outlet_img_title="Вкл./Выкл. выход";var s_outlet_outlet_img_alt="вкл./выкл.";var s_outlet_outlet_cfg_title="Настройка выхода";var s_outlet_outlet_cfg_alt="настройка выхода";var s_outlet_outlet_device_title="Изменение имени устройства";var s_outlet_edit_device_name_header="Изменение названия набора выходов";var s_outlet_change_name_title="Изменить название выхода";var s_outlet_change_name="Изменение названия выхода";var s_outlet_conf_header="Настройка выхода";var s_outlet_rule_edit_title="Редактировать правило";var s_outlet_rule_edit="E";var s_outlet_rule_delete_title="Удалить правило";var s_outlet_rule_delete="X";var s_outlet_rule_condition_form_close_title="Закрыть";var s_outlet_rule_condition_form_close="X";var s_outlet_rule_form_close_title="Закрыть";var s_outlet_rule_form_close="X";var s_outlet_btn_addrule_title="Добавить новое правило";var s_outlet_btn_addrule="Новое правило";var s_outlet_rule_header="Настройка правила";var s_outlet_for_outlet="для выхода";var s_outlet_rule_date_start_title="Дата начала действия";var s_outlet_rule_time_start_title="Время начала действия";var s_outlet_rule_start="Старт";var s_outlet_rule_date_stop_title="Дата окончания действия";var s_outlet_rule_time_stop_title="Время окончания действия";var s_outlet_rule_stop="Стоп";var s_outlet_btn_addcondition_title="Создать новое условие";var s_outlet_btn_addcondition="Создать условие";var s_outlet_rule_condition_list_on_header="Включение<br />(подача питания)";var s_outlet_rule_condition_list_off_header="Выключение<br />(отключение питания)";var s_outlet_rule_alert_date_start_less_stop="Дата начала должна быть раньше даты окончания. (проверьте дату окончания)";var s_outlet_rule_weekday_button_on_title="Отключить";var s_outlet_rule_weekday_button_on="Да";var s_outlet_rule_weekday_button_off_title="Включить";var s_outlet_rule_weekday_button_off="Нет";var s_outlet_rule_ctl_edit_title="Редактировать условие";var s_outlet_rule_ctl_edit="E";var s_outlet_rule_ctl_delete_title="Удалить условие";var s_outlet_rule_ctl_delete="X";var s_outlet_rule_no_conditions="Нет ни одного условия";var s_btn_close_corner="X";var s_outlet_rule_sensor_default_name="Набор датчиков";var s_outlet_rule_no_sensors="Не выбран набор датчиков";var s_outlet_rule_sensor_no_type="Не выбран тип датчика";var s_outlet_rule_alg_AND="И";var s_outlet_rule_alg_OR="ИЛИ";var s_outlet_rule_relation_more="Более, чем";var s_outlet_rule_relation_less="Менее, чем";var s_sensor_units_temperature="&#8451;";var s_sensor_units_humidity="RH%";var s_sensor_units_light_in="lux";var s_sensor_units_light_out="lux";var s_sensor_units_co2="";var s_sensor_units_ec="mSiemens/cm";var s_sensor_units_tds="ppm";var s_sensor_units_ppm="ppm";var s_sensor_units_ph="";var s_sensor_units_raw="/4096";var s_sensor_units_pressure="мм.рт.ст.";var s_sensor_units_sea_pressure="мм.рт.ст.";var s_sensor_units_altitude="м";var s_sensor_units_gyro="";var s_sensor_units_compass="";var s_condition_value_beg="в начале периода";var s_condition_value_end="в конце периода";var s_outlet_for_rule="для правила";var s_outlet_rule_condition_on_header="Настройка условия ВКЛЮЧЕНИЯ";var s_outlet_rule_condition_off_header="Настройка условия ВЫКЛЮЧЕНИЯ";var s_outlet_rules_are_activated="Выключатель управляется правилами. Пожалуйста, удалите их, прежде, чем продолжить.";var s_outlet_delete_condition_confirm="Вы действительно хотите удалить это условие ?";var s_outlet_delete_rule_confirm="Вы действительно хотите удалить правило ";var temporary_rule=null;var temporary_condition=null;function outlet_page_update(){var b=document.getElementById("page_info");if(!b){console.log("cannot update outlet page: no page_info element");return}for(var a=b.childNodes.length-1;a>=0;a--){b.removeChild(b.childNodes[a])}if(!OUTLET||!OUTLET.outlet){console.log("no OUTLET or OUTLET.outlet configurations");return}var h=create_element_div("outlet_device_name","outlet_device_name",s_outlet_outlet_device_title,OUTLET.name,outlet_edit_device_name,b);b.appendChild(document.createElement("br"));if(OUTLET.outlet.length==0){create_element_div("no_outlets","no_outlets",null,s_outlet_no_outlets,null,b);return}for(var a=0;a<OUTLET.outlet.length;a++){var f=(a<9)?"0"+(a+1).toString():(a+1).toString();var g=create_element_div("outlet_ctl"+a.toString(),"outlet_ctl",null,null,null,b);var j=create_element_div("outlet_name"+a.toString(),"outlet_name",null,OUTLET.outlet[a].name,null,g);g.appendChild(document.createElement("br"));var d=create_element_div("outlet_num"+a.toString(),"outlet_num",null,f,null,g);var c=create_element_img("outlet_toggle"+a.toString(),"outlet_toggle",s_outlet_outlet_img_title+" №"+f,s_outlet_outlet_img_alt,tar_get_image_src(img_prefix+OUTLET_CONSUMER_IMAGES[OUTLET.outlet[a].consumer]+((OUTLET.outlet[a].rule.length>0)?"_rule":"")+((OUTLET.outlet[a].state)?"_on":"_off")+".png"),"outlet_toggle("+a.toString()+");",g);var e=create_element_img("outlet_cfg"+a.toString(),"outlet_cfg",s_outlet_outlet_cfg_title+" №"+f,s_outlet_outlet_cfg_alt,tar_get_image_src(img_prefix+"outlet_conf.png"),"outlet_config("+a.toString()+");",g);b.appendChild(document.createElement("br"))}copyright(b)}function outlet_edit_device_name(){edit_name(s_outlet_edit_device_name_header,OUTLET.name,function(a){set_outlet_device_name(a,function(){remove_editor()})},function(){remove_editor()})}function outlet_toggle(a){if(OUTLET.outlet[a].rule.length>0){alert(s_outlet_rules_are_activated);return}var b=(OUTLET.outlet[a].state)?0:1;set_outlet_state(a,b,function(d,c){var e=document.getElementById("outlet_toggle"+a);if(e){e.setAttribute("src",tar_get_image_src(img_prefix+OUTLET_CONSUMER_IMAGES[OUTLET.outlet[d].consumer]+((OUTLET.outlet[d].state)?"_on":"_off")+".png"))}else{}})}function outlet_rule_condition_create_daytime(k){var s=create_element_div("outlet_rule_condition_values","outlet_rule_condition_values",null,null,null,null);var f=0;var j=0;if(temporary_condition.val_beg>0){if(k==0){var o=new Date(temporary_condition.val_beg*1000);f=("0"+o.getHours()).slice(-2);j=("0"+o.getMinutes()).slice(-2)}else{if(k==1){f=("0"+parseInt(temporary_condition.val_beg/3600).toString()).slice(-2);j=("0"+parseInt((temporary_condition.val_beg%3600)/60).toString()).slice(-2)}}}var m=create_element_img("outlet_rule_condition_value_img","outlet_rule_condition_value_img",null,null,tar_get_image_src(img_prefix+"clock.png"),null,s);var a=create_element_div("outlet_rule_condition_value_container","outlet_rule_condition_value_container",null,null,null,s);var q=document.createElement("select");q.setAttribute("id","outlet_rule_condition_hh");q.setAttribute("class","outlet_rule_condition_hh");q.addEventListener("change",function(){if(k==0){var t=new Date();var u=t.getTimezoneOffset()*60;var i=((parseInt(this.value)*3600)+(temporary_condition.val_beg%3600))+u;temporary_condition.val_beg=(i<0)?(24*3600)+i:i}else{if(k==1){temporary_condition.val_beg=((parseInt(this.value)*3600)+(temporary_condition.val_beg%3600))}}},false);a.appendChild(q);for(var l=0;l<24;l++){var c=document.createElement("option");c.setAttribute("value",l);if(l==f){c.setAttribute("selected","true")}c.innerHTML=("0"+l).slice(-2);q.appendChild(c)}var r=document.createElement("div");r.innerHTML=" : ";a.appendChild(r);var h=document.createElement("select");h.setAttribute("id","outlet_rule_condition_mm");h.setAttribute("class","outlet_rule_condition_mm");h.addEventListener("change",function(){temporary_condition.val_beg=((parseInt(this.value)*60)+(parseInt(temporary_condition.val_beg/3600)*3600))},false);a.appendChild(h);for(var l=0;l<60;l++){var c=document.createElement("option");c.setAttribute("value",l);if(l==j){c.setAttribute("selected","true")}c.innerHTML=("0"+l).slice(-2);h.appendChild(c)}if((temporary_rule.date.start>=0&&temporary_rule.date.stop>=0)&&(temporary_rule.date.start!=temporary_rule.date.stop)){var e=create_element_div("outlet_rule_condition_value_container_end","outlet_rule_condition_value_container",null,null,null,s);f=0;j=0;if(temporary_condition.val_end>0){if(k==0){var o=new Date(temporary_condition.val_end*1000);f=("0"+o.getHours()).slice(-2);j=("0"+o.getMinutes()).slice(-2)}else{if(k==1){f=("0"+parseInt(temporary_condition.val_end/3600).toString()).slice(-2);j=("0"+parseInt((temporary_condition.val_end%3600)/60).toString()).slice(-2)}}}var b=document.createElement("select");b.setAttribute("id","outlet_rule_condition_hh_end");b.setAttribute("class","outlet_rule_condition_hh");b.addEventListener("change",function(){if(k==0){var t=new Date();var u=t.getTimezoneOffset()*60;var i=((parseInt(this.value)*3600)+(temporary_condition.val_end%3600))+u;temporary_condition.val_end=(i<0)?(24*3600)+i:i}else{if(k==1){temporary_condition.val_end=((parseInt(this.value)*3600)+(temporary_condition.val_end%3600))}}},false);e.appendChild(b);for(var l=0;l<24;l++){var c=document.createElement("option");c.setAttribute("value",l);if(l==f){c.setAttribute("selected","true")}c.innerHTML=("0"+l).slice(-2);b.appendChild(c)}var r=document.createElement("div");r.innerHTML=" : ";e.appendChild(r);var n=document.createElement("select");n.setAttribute("id","outlet_rule_condition_mm_end");n.setAttribute("class","outlet_rule_condition_mm");n.addEventListener("change",function(){temporary_condition.val_end=((parseInt(this.value)*60)+(parseInt(temporary_condition.val_end/3600)*3600))},false);e.appendChild(n);for(var l=0;l<60;l++){var c=document.createElement("option");c.setAttribute("value",l);if(l==j){c.setAttribute("selected","true")}c.innerHTML=("0"+l).slice(-2);n.appendChild(c)}var p=document.createElement("div");p.innerHTML=s_condition_value_beg;var g=document.createElement("div");g.innerHTML=s_condition_value_end;a.appendChild(document.createElement("br"));a.appendChild(p);e.appendChild(document.createElement("br"));e.appendChild(g)}return s}function outlet_rule_condition_create_logpin(b){var c=create_element_div("outlet_rule_condition_values_"+b,"outlet_rule_condition_values",null,null,null,null);var a=document.createElement("select");a.setAttribute("id","outlet_rule_condition_logic_val_"+b);a.setAttribute("class","outlet_rule_condition_logic_val");a.addEventListener("change",function(){temporary_condition.flags&=~(OUTLET_RULE_FLAG_ONOFF_ON|OUTLET_RULE_FLAG_ONOFF_OFF);temporary_condition.flags|=((parseInt(this.value))?OUTLET_RULE_FLAG_ONOFF_ON:OUTLET_RULE_FLAG_ONOFF_OFF)},false);c.appendChild(a);var e=document.createElement("option");e.setAttribute("value",0);e.innerHTML=s_sensor_logic_pin_state_off;a.appendChild(e);var d=document.createElement("option");d.setAttribute("value",1);d.innerHTML=s_sensor_logic_pin_state_on;a.appendChild(d);if(temporary_condition.flags&OUTLET_RULE_FLAG_ONOFF_ON){d.setAttribute("selected","true")}else{if(temporary_condition.flags&OUTLET_RULE_FLAG_ONOFF_OFF){e.setAttribute("selected","true")}else{temporary_condition.flags|=OUTLET_RULE_FLAG_ONOFF_OFF}}return c}function outlet_rule_condition_create_values(f){if(!f){return null}var n=create_element_div("outlet_rule_condition_values","outlet_rule_condition_values",null,null,null,null);var h="";var i="";switch(parseInt(f)){case SENSOR_TYPE_TEMPERATURE:val_step=0.1;val_max=400;val_min=-100;h="temp.png";i=s_sensor_units_temperature;break;case SENSOR_TYPE_SOLUTION_TEMP:val_step=0.1;val_max=100;val_min=-100;h="sol_temp.png";i=s_sensor_units_temperature;break;case SENSOR_TYPE_HUMIDITY:val_step=0.1;val_max=100;val_min=0;h="humi.png";i=s_sensor_units_humidity;break;case SENSOR_TYPE_LIGHT_IN:val_step=1;val_max=100000;val_min=0;h="light_in.png";i=s_sensor_units_light_in;break;case SENSOR_TYPE_LIGHT_OUT:val_step=1;val_max=100000;val_min=0;h="light_out.png";i=s_sensor_units_light_out;break;case SENSOR_TYPE_CO2:val_step=1;val_max=100;val_min=0;h="co2.png";i=s_sensor_units_co2;break;case SENSOR_TYPE_EC:val_step=0.1;val_max=100000;val_min=0;h="ec.png";i=s_sensor_units_ec;break;case SENSOR_TYPE_TDS:val_step=0.1;val_max=1000000;val_min=0;h="tds.png";i=s_sensor_units_tds;break;case SENSOR_TYPE_PPM:val_step=0.1;val_max=1000000;val_min=0;h="ppm.png";i=s_sensor_units_ppm;break;case SENSOR_TYPE_PH:val_step=0.1;val_max=14;val_min=0;h="ph.png";i=s_sensor_units_ph;break;case SENSOR_TYPE_RAW:val_step=1;val_max=4096;val_min=0;h="raw.png";i=s_sensor_units_raw;break;case SENSOR_TYPE_DEW_POINT:val_step=0.1;val_max=100;val_min=-100;h="dew.png";i=s_sensor_units_temperature;break;case SENSOR_TYPE_PRESSURE:val_step=0.1;val_max=10000;val_min=0;h="pres.png";i=s_sensor_units_pressure;break;case SENSOR_TYPE_SEA_LEVEL_PRESSURE:val_step=0.1;val_max=10000;val_min=0;h="spres.png";i=s_sensor_units_pressure;break;case SENSOR_TYPE_ALTITUDE:val_step=1;val_max=10000;val_min=-10000;h="alti.png";i=s_sensor_units_altitude;break;case SENSOR_TYPE_GYRO:val_step=1;val_max=360;val_min=0;h="gyro.png";i=s_sensor_units_gyro;break;case SENSOR_TYPE_COMPASS:val_step=1;val_max=360;val_min=0;h="compass.png";i=s_sensor_units_compass;break}var b=document.createElement("select");b.setAttribute("id","outlet_rule_condition_relation");b.setAttribute("class","outlet_rule_condition_relation");b.addEventListener("change",function(){temporary_condition.flags&=~(OUTLET_RULE_FLAG_FALL|OUTLET_RULE_FLAG_RISE);if(parseInt(this.value)===OUTLET_RULE_FLAG_RISE){temporary_condition.flags|=OUTLET_RULE_FLAG_RISE}else{if(parseInt(this.value)===OUTLET_RULE_FLAG_FALL){temporary_condition.flags|=OUTLET_RULE_FLAG_FALL}}},false);n.appendChild(b);var j=document.createElement("option");j.setAttribute("value",OUTLET_RULE_FLAG_RISE);j.innerHTML=s_outlet_rule_relation_more;if(temporary_condition.flags&OUTLET_RULE_FLAG_RISE){j.setAttribute("selected","true")}b.appendChild(j);var k=document.createElement("option");k.setAttribute("value",OUTLET_RULE_FLAG_FALL);k.innerHTML=s_outlet_rule_relation_less;if(temporary_condition.flags&OUTLET_RULE_FLAG_FALL){k.setAttribute("selected","true")}b.appendChild(k);n.appendChild(document.createElement("br"));var g=create_element_img("outlet_rule_condition_value_img","outlet_rule_condition_value_img",null,null,tar_get_image_src(img_prefix+h),null,n);var o=document.createElement("div");o.setAttribute("class","outlet_condition_units");o.innerHTML="&emsp;"+i;n.appendChild(o);n.appendChild(document.createElement("br"));var a=create_element_div("outlet_rule_condition_value_container","outlet_rule_condition_value_container",null,null,null,n);var l=document.createElement("input");l.setAttribute("id","outlet_rule_condition_value");l.setAttribute("class","outlet_rule_condition_value");l.setAttribute("type","number");l.setAttribute("step",val_step);l.setAttribute("max",val_max);l.setAttribute("min",val_min);l.setAttribute("value",temporary_condition.val_beg);l.setAttribute("onchange","outlet_rule_save_condition_value(this.value, null);");a.appendChild(l);if((temporary_rule.date.start>=0&&temporary_rule.date.stop>=0)&&(temporary_rule.date.start!=temporary_rule.date.stop)){var e=create_element_div("outlet_rule_condition_value_container_end","outlet_rule_condition_value_container",null,null,null,n);var m=document.createElement("input");m.setAttribute("id","outlet_rule_condition_value");m.setAttribute("class","outlet_rule_condition_value");m.setAttribute("type","number");m.setAttribute("step",val_step);m.setAttribute("max",val_max);m.setAttribute("min",val_min);m.setAttribute("value",temporary_condition.val_end);m.setAttribute("onchange","outlet_rule_save_condition_value(null, this.value);");e.appendChild(m);var d=document.createElement("div");d.innerHTML=s_condition_value_beg;a.appendChild(document.createElement("br"));a.appendChild(d);var c=document.createElement("div");c.innerHTML=s_condition_value_end;e.appendChild(document.createElement("br"));e.appendChild(c)}return n}function outlet_rule_save_condition_value(a,b){if(a!==null){temporary_condition.val_beg=a;if(temporary_rule.date.start==0||temporary_rule.date.stop==0){temporary_condition.val_end=a}}if(b!==null){temporary_condition.val_end=b}}function outlet_create_condition_form(D,m,u,d){var L=null;var y=document.getElementById("outlet_rule_condition_form_"+d+"_"+u);if(y){L=y.scrollTop}if(temporary_condition===null){temporary_condition=outlet_create_condition_copy((temporary_rule.condition[u])?temporary_rule.condition[u]:null);temporary_condition.flags|=(d)?OUTLET_RULE_FLAG_ON:OUTLET_RULE_FLAG_OFF}y=create_element_div("outlet_rule_condition_form_"+d+"_"+u,"outlet_rule_condition_form",null,null,null,document.body);var t=0;var v=(d)?OUTLET_RULE_FLAG_ON:OUTLET_RULE_FLAG_OFF;for(var w=0;w<temporary_rule.condition.length&&w<u;w++){if(temporary_rule.condition[w].flags&v){t++}}var z=create_element_div("outlet_rule_condition_header_"+d,"outlet_condition_header",null,((d)?s_outlet_rule_condition_on_header:s_outlet_rule_condition_off_header)+" №"+("0"+(t+1).toString()).slice(-2)+"<br />"+s_outlet_for_rule+" №"+("0"+(parseInt(m)+1).toString()).slice(-2)+"&emsp;"+s_outlet_for_outlet+" №"+("0"+(parseInt(D)+1).toString()).slice(-2),null,y);var j=create_element_div("outlet_rule_condition_sensor_"+d+"_"+u,"outlet_rule_condition_sensor",null,null,null,y);if(t>0){var e=document.createElement("select");e.setAttribute("id","outlet_rule_condition_alg_"+d+"_"+u);e.setAttribute("class","outlet_rule_condition_alg");e.addEventListener("change",function(i){temporary_condition.flags&=~(OUTLET_RULE_FLAG_RULE_ALG_AND|OUTLET_RULE_FLAG_RULE_ALG_OR);temporary_condition.flags|=parseInt(this.value)},false);j.appendChild(e);var f=document.createElement("option");f.setAttribute("value",OUTLET_RULE_FLAG_RULE_ALG_AND);f.innerHTML=s_outlet_rule_alg_AND;e.appendChild(f);var F=document.createElement("option");F.setAttribute("value",OUTLET_RULE_FLAG_RULE_ALG_OR);F.innerHTML=s_outlet_rule_alg_OR;e.appendChild(F);if(temporary_condition.flags&OUTLET_RULE_FLAG_RULE_ALG_AND){f.setAttribute("selected","true")}else{if(temporary_condition.flags&OUTLET_RULE_FLAG_RULE_ALG_OR){F.setAttribute("selected","true")}else{temporary_condition.flags|=OUTLET_RULE_FLAG_RULE_ALG_AND}}}else{temporary_condition.flags&=~(OUTLET_RULE_FLAG_RULE_ALG_PRIO|OUTLET_RULE_FLAG_RULE_ALG_AND|OUTLET_RULE_FLAG_RULE_ALG_OR);temporary_condition.flags|=OUTLET_RULE_FLAG_RULE_ALG_PRIO}if(OUTLET.sensor_list&&OUTLET.sensor_list.length>0){var I=document.createElement("select");I.setAttribute("id","outlet_rule_condition_sensorlist_"+d+"_"+u);I.setAttribute("class","outlet_rule_condition_sensorlist");I.addEventListener("change",function(l){if(this.value>=0){temporary_condition.sensor_id=[];for(var n=0;n<8;n++){temporary_condition.sensor_id[n]=OUTLET.sensor_list[parseInt(this.value)].device_id[n]}}else{temporary_condition.sensor_id=[];temporary_condition.type=SENSOR_TYPE_NULL;temporary_condition.flags&=0|(OUTLET_RULE_FLAG_RULE_ALG_AND|OUTLET_RULE_FLAG_RULE_ALG_OR);temporary_condition.val_beg=0;temporary_condition.val_end=0}outlet_create_condition_form(D,m,u,d)},false);j.appendChild(I);var a=document.createElement("option");a.setAttribute("value",-1);a.innerHTML=s_outlet_rule_no_sensors;I.appendChild(a);for(var w=0;w<OUTLET.sensor_list.length;w++){var a=document.createElement("option");a.setAttribute("value",w);if(typeof OUTLET.sensor_list[w].name==="string"&&OUTLET.sensor_list[w].name!==""){a.innerHTML=OUTLET.sensor_list[w].name}else{a.innerHTML=s_outlet_rule_sensor_default_name+"&emsp;";for(var r=0;r<OUTLET.sensor_list[w].device_id.length;r++){a.innerHTML+=OUTLET.sensor_list[w].device_id[r].toString(16)}}if(temporary_condition&&temporary_condition.sensor_id.length==8){var J=true;for(var r=0;r<OUTLET.sensor_list[w].device_id.length;r++){if(temporary_condition.sensor_id[r]!==OUTLET.sensor_list[w].device_id[r]){J=false;break}}if(J){a.setAttribute("selected","true")}}I.appendChild(a)}j.appendChild(document.createElement("br"));var o=parseInt(I.value);if(o>=0){var p=document.createElement("select");p.setAttribute("id","outlet_rule_condition_sensortype_"+d+"_"+u);p.setAttribute("class","outlet_rule_condition_sensortype");p.addEventListener("change",function(n){var N=temporary_condition.flags&~(OUTLET_RULE_FLAG_TIME_EXACT|OUTLET_RULE_FLAG_TIME_INTERVAL|OUTLET_RULE_FLAG_ONOFF_ON|OUTLET_RULE_FLAG_ONOFF_OFF);if(this.value&&parseInt(this.value)>0){var M=parseInt(this.value);var l=(M&SENSOR_TYPE_MASK);if(l===SENSOR_TYPE_DAYTIME){var i=parseInt(this.value.substr(this.value.indexOf(".")+1));if(i==0){temporary_condition.flags=N|OUTLET_RULE_FLAG_TIME_EXACT}else{if(i==1){temporary_condition.flags=N|OUTLET_RULE_FLAG_TIME_INTERVAL}}}else{if(l===SENSOR_TYPE_ONOFF){temporary_condition.val_beg=(1<<parseInt(this.value.substr(this.value.indexOf(".")+1)));temporary_condition.val_end=0}}temporary_condition.type=M}else{temporary_condition.type=SENSOR_TYPE_NULL;temporary_condition.flags=N}outlet_create_condition_form(D,m,u,d)},false);j.appendChild(p);var a=document.createElement("option");a.setAttribute("value",-1);a.innerHTML=s_outlet_rule_sensor_no_type;p.appendChild(a);for(var w=0;w<OUTLET.sensor_list[o].sensor_count;w++){var c=OUTLET.sensor_list[o].metric[w].type;var B=(c&SENSOR_TYPE_MASK);var K=(c&SENSOR_GROUP_MASK);var x=(K>>24);var A=((c&SENSOR_COUNT_MASK)>>16);var q=SENSOR_GROUP_NAMES[x];if((K==STM32_BME280_BUS1_GROUP||K==STM32_BME280_BUS2_GROUP)||(K==STM32_BH1750_BUS1_GROUP||K==STM32_BH1750_BUS2_GROUP)){q+=" ("+s_sensor_digital_id+("0"+(parseInt(A)+1).toString()).slice(-2)+") "}else{if(K==STM32_ADC1_GROUP||K==STM32_ADC2_GROUP){q+=" ("+s_sensor_analog_pin+("0"+(parseInt(A)+1).toString()).slice(-2)+") "}}if(B===SENSOR_TYPE_DATE){continue}if(B===SENSOR_TYPE_DAYTIME){var H=document.createElement("option");H.setAttribute("value",c+".0");H.innerHTML=SENSOR_DAYTIME_TYPE_NAMES[0];p.appendChild(H);var G=document.createElement("option");G.setAttribute("value",c+".1");G.innerHTML=SENSOR_DAYTIME_TYPE_NAMES[1];p.appendChild(G);if(temporary_condition&&((temporary_condition.type&SENSOR_TYPE_MASK)==B)){if(temporary_condition.flags&OUTLET_RULE_FLAG_TIME_EXACT){H.setAttribute("selected","true")}else{if(temporary_condition.flags&OUTLET_RULE_FLAG_TIME_INTERVAL){G.setAttribute("selected","true")}}}}else{if(parseInt(B)===SENSOR_TYPE_ONOFF){for(var s=0;s<16;s++){if(is_logic_pin_enabled(s,OUTLET.sensor_list[o].metric[w].value)){var h="";if(K==STM32_MCP23017_BUS1_GROUP||K==STM32_MCP23017_BUS2_GROUP){h=" ("+s_sensor_logic_pin+("0"+(parseInt(s)+1).toString()).slice(-2)+") "}var a=document.createElement("option");a.setAttribute("value",c+"."+s);a.innerHTML=q+h+SENSOR_TYPE_NAMES[B];p.appendChild(a);if(temporary_condition&&((temporary_condition.type&SENSOR_TYPE_MASK)==B)){if(temporary_condition.val_beg&(1<<s)){a.setAttribute("selected","true")}}}}}else{if(parseInt(B)===SENSOR_TYPE_ONOFF_CHANGED){}else{var a=document.createElement("option");a.setAttribute("value",c);a.innerHTML=q+SENSOR_TYPE_NAMES[B];p.appendChild(a);if(temporary_condition&&((temporary_condition.type&SENSOR_TYPE_MASK)==B)){a.setAttribute("selected","true")}}}}}if(p.value!=-1){var c=(parseInt(p.value)&SENSOR_TYPE_MASK);if(c===SENSOR_TYPE_DAYTIME){var g=parseInt(p.value.substr(p.value.indexOf(".")+1));var b=outlet_rule_condition_create_daytime(g);y.appendChild(b)}else{if(c===SENSOR_TYPE_ONOFF){var k=parseInt(p.value.substr(p.value.indexOf(".")+1));var b=outlet_rule_condition_create_logpin(k);y.appendChild(b)}else{if(c===SENSOR_TYPE_ONOFF_CHANGED){}else{if(c==SENSOR_TYPE_TEMPERATURE){}else{if(c==SENSOR_TYPE_SOLUTION_TEMP){}else{if(c==SENSOR_TYPE_HUMIDITY){}else{if(c==SENSOR_TYPE_LIGHT_IN){}else{if(c==SENSOR_TYPE_LIGHT_OUT){}else{if(c==SENSOR_TYPE_CO2){}else{if(c==SENSOR_TYPE_EC){}else{if(c==SENSOR_TYPE_TDS){}else{if(c==SENSOR_TYPE_PPM){}else{if(c==SENSOR_TYPE_PH){}else{if(c==SENSOR_TYPE_RAW){}else{if(c==SENSOR_TYPE_DEW_POINT){}else{if(c==SENSOR_TYPE_PRESSURE){}else{if(c==SENSOR_TYPE_SEA_LEVEL_PRESSURE){}else{if(c==SENSOR_TYPE_ALTITUDE){}else{if(c==SENSOR_TYPE_GYRO){}else{if(c==SENSOR_TYPE_COMPASS){}}}}}}}}}}}}}}}}}var b=outlet_rule_condition_create_values(c);y.appendChild(b)}}}b.appendChild(document.createElement("br"))}var C=create_element_div("btn_cancel_"+D+"_"+m+"_"+u,"btn_cancel",s_btn_cancel_title,s_btn_cancel,function(){temporary_condition=null;remove_element("outlet_rule_condition_form_"+d+"_"+u)},b);var E=create_element_div("btn_save_"+D+"_"+m+"_"+u,"btn_save",s_btn_save_title,s_btn_save,function(){temporary_rule.condition[u]=temporary_condition;temporary_rule.condition_count=temporary_rule.condition.length;remove_element("outlet_rule_condition_form_"+d+"_"+u);temporary_condition=null;outlet_create_rule_form(D,m)},b)}}else{}create_element_div("outlet_rule_condition_form_close"+D+"_"+m,"outlet_rule_condition_form_close",s_outlet_rule_condition_form_close_title,s_outlet_rule_condition_form_close,function(){temporary_condition=null;remove_element("outlet_rule_condition_form_"+d+"_"+u)},y);if(L!=null){y.scrollTop=L}}function create_condition_element(a,e,d,g,c){var b=print_outlet_rule_condition_element(temporary_rule,d,g);var h=create_element_div("outlet_rule_condition_"+a+"_"+e+"_"+g+"_"+d,"outlet_rule_condition",null,b,null,c);var f=create_element_div("outlet_rule_condition_ctl_"+a+"_"+e+"_"+g+"_"+d,"outlet_rule_condition_ctl",null,null,null,h);create_element_div("outlet_rule_condition_ctl_edit_"+a+"_"+e+"_"+g+"_"+d,"outlet_rule_condition_ctl_edit",s_outlet_rule_ctl_edit_title,s_outlet_rule_ctl_edit,function(){outlet_create_condition_form(a,e,d,g)},f);create_element_div("outlet_rule_condition_ctl_delete_"+a+"_"+e+"_"+g+"_"+d,"outlet_rule_condition_ctl_delete",s_outlet_rule_ctl_delete_title,s_outlet_rule_ctl_delete,function(){if(!confirm(s_outlet_delete_condition_confirm)){return}temporary_rule.condition.splice(d,1);temporary_rule.condition_count=temporary_rule.condition.length;if(temporary_rule.condition_count>0){temporary_rule.condition[0].flags&=~(OUTLET_RULE_FLAG_RULE_ALG_PRIO|OUTLET_RULE_FLAG_RULE_ALG_AND|OUTLET_RULE_FLAG_RULE_ALG_OR);temporary_rule.condition[0].flags|=OUTLET_RULE_FLAG_RULE_ALG_PRIO}outlet_create_rule_form(a,e)},f)}function create_rule_date_element(c,b,f,h,i,e){var d=create_element_div(c,b,f,null,i,e);var a=create_element_img(c+"_img",null,f,null,tar_get_image_src(img_prefix+"calendar.png"),null,d);var g=create_element_div(c+"_val","outlet_rule_datetime_value_val",f,h,null,d);return d}function create_rule_time_element(b,a,g,h,i,f){var c=create_element_div(b,a,g,null,i,f);var e=create_element_img(b+"_img",null,g,null,tar_get_image_src(img_prefix+"clock.png"),null,c);var d=create_element_div(b+"_val","outlet_rule_datetime_value_val",g,h,null,c);return c}function weekday_clicked(c,a,b){if(temporary_rule.date.week_days&(1<<c)){temporary_rule.date.week_days&=~(1<<c)}else{temporary_rule.date.week_days|=(1<<c)}if((127&temporary_rule.date.week_days)==127){temporary_rule.date.flags&=~(OUTLET_RULE_FLAG_WEEK_ENABLE)}else{temporary_rule.date.flags|=OUTLET_RULE_FLAG_WEEK_ENABLE}outlet_create_rule_form(a,b)}function outlet_create_rule_form(z,j){if(typeof z!=="number"||z<0||z>=OUTLET.outlet.length){console.log("invalid outlet id for edit rule");return}if(typeof j!=="number"){j=0;if(OUTLET.outlet[z].rule.length>0){var u=0;for(u=0;u<OUTLET.outlet[z].rule.length;u++){if(!OUTLET.outlet[z].rule[u]||typeof OUTLET.outlet[z].rule[u]!=="object"||OUTLET.outlet[z].rule[u]==null){break}}j=u}}var I=null;var r=document.getElementById("outlet_rule_form_"+z+"_"+j);if(r){I=r.scrollTop}r=create_element_div("outlet_rule_form_"+z+"_"+j,"outlet_rule_form",null,null,null,document.body);if(!r){console.log("outlet rule");return}var q=create_element_div("outlet_rule_header_"+z+"_"+j,"outlet_rule_header",null,s_outlet_rule_header+" №"+("0"+(j+1).toString()).slice(-2)+"<br />"+s_outlet_for_outlet+" №"+("0"+(parseInt(z)+1).toString()).slice(-2),null,r);if(temporary_rule===null){temporary_rule=outlet_create_rule_copy(z,j)}var C=new Date(temporary_rule.date.start*1000);var c=(temporary_rule.date.start>0)?("0"+C.getDate()).slice(-2)+"/"+("0"+(parseInt(C.getMonth())+1).toString()).slice(-2)+"/"+C.getFullYear():"--/--/----";var m=(temporary_rule.date.start>0)?("0"+C.getHours()).slice(-2)+":"+("0"+C.getMinutes()).slice(-2):"--:--";C=new Date(temporary_rule.date.stop*1000);var n=(temporary_rule.date.stop>0)?("0"+C.getDate()).slice(-2)+"/"+("0"+(parseInt(C.getMonth())+1).toString()).slice(-2)+"/"+C.getFullYear():"--/--/----";var s=(temporary_rule.date.stop>0)?("0"+C.getHours()).slice(-2)+":"+("0"+C.getMinutes()).slice(-2):"--:--";var b=create_element_div("outlet_rule_datetime_"+z+"_"+j,"outlet_rule_datetime_block",null,null,null,r);var E=create_element_div("outlet_rule_datetime_start_"+z+"_"+j,"outlet_rule_datetime_container",null,s_outlet_rule_start+"&emsp;",null,b);var w=create_rule_date_element("outlet_rule_date_start_"+z+"_"+j,"outlet_rule_datetime_value",s_outlet_rule_date_start_title,c,function(){create_calendar(s_outlet_rule_time_start_title,null,null,function(d){temporary_rule.date.flags|=OUTLET_RULE_FLAG_DATE_ENABLE;temporary_rule.date.start=d;outlet_create_rule_form(z,j);remove_calendar()})},E);var f=create_rule_time_element("outlet_rule_time_start_"+z+"_"+j,"outlet_rule_datetime_value",s_outlet_rule_time_start_title,m,function(){edit_time(s_outlet_rule_time_start_title,temporary_rule.date.start,null,function(d){temporary_rule.date.flags|=OUTLET_RULE_FLAG_DATE_ENABLE;temporary_rule.date.start=d;outlet_create_rule_form(z,j);remove_editor()},function(){remove_editor()})},E);var A=create_element_div("outlet_rule_datetime_stop_"+z+"_"+j,"outlet_rule_datetime_container",null,s_outlet_rule_stop+"&emsp;",null,b);var g=create_rule_date_element("outlet_rule_date_stop_"+z+"_"+j,"outlet_rule_datetime_value",s_outlet_rule_date_stop_title,n,function(){create_calendar(s_outlet_rule_time_stop_title,null,null,function(d){temporary_rule.date.flags|=OUTLET_RULE_FLAG_DATE_ENABLE;temporary_rule.date.stop=d;outlet_create_rule_form(z,j);remove_calendar()})},A);var x=create_rule_time_element("outlet_rule_time_stop_"+z+"_"+j,"outlet_rule_datetime_value",s_outlet_rule_time_stop_title,s,function(){edit_time(s_outlet_rule_time_stop_title,temporary_rule.date.stop,null,function(d){temporary_rule.date.flags|=OUTLET_RULE_FLAG_DATE_ENABLE;temporary_rule.date.stop=d;outlet_create_rule_form(z,j);remove_editor()},function(){remove_editor()})},A);var B=create_element_div("outlet_rule_weekdays_container_"+z+"_"+j,"outlet_rule_weekdays_container",null,null,null,b);for(var u=0;u<7;u++){var l=create_element_div("weekday_container"+z+"_"+j+"_"+u,"outlet_rule_weekday_container",null,weekday_list[u]+"<br />",null,B);var H=(temporary_rule.date.week_days&(1<<u))?s_outlet_rule_weekday_button_on_title:s_outlet_rule_weekday_button_off_title;var F=(temporary_rule.date.week_days&(1<<u))?s_outlet_rule_weekday_button_on:s_outlet_rule_weekday_button_off;var v=(temporary_rule.date.week_days&(1<<u))?"outlet_rule_weekday_button_on":"outlet_rule_weekday_button_off";var G=create_element_div("weekday_"+z+"_"+j+"_"+u,v,H,F,"weekday_clicked("+u+","+z+","+j+");",l)}var e=create_element_div("outlet_rule_condition_list_on_container_"+z+"_"+j,"outlet_rule_condition_list_container_on",null,null,null,r);var h=create_element_div("outlet_rule_condition_list_on_header_"+z+"_"+j,"outlet_rule_condition_list_header_on",null,s_outlet_rule_condition_list_on_header,null,e);var p=create_element_div("outlet_rule_condition_list_on_"+z+"_"+j,"outlet_rule_condition_list",null,null,null,e);var t=0;for(var u=0;u<temporary_rule.condition.length;u++){if(temporary_rule.condition[u].flags&OUTLET_RULE_FLAG_ON){create_condition_element(z,j,u,1,p);t++}}if(t==0){p.innerHTML=s_outlet_rule_no_conditions}create_element_div("outlet_btn_add_on_"+z+"_"+j,"outlet_btn_add",s_outlet_btn_addcondition_title,s_outlet_btn_addcondition,function(){outlet_create_condition_form(z,j,(temporary_rule.condition.length>0)?temporary_rule.condition.length:0,1)},e);var a=create_element_div("outlet_rule_condition_list_off_container_"+z+"_"+j,"outlet_rule_condition_list_container_off",null,null,null,r);var k=create_element_div("outlet_rule_condition_list_off_header_"+z+"_"+j,"outlet_rule_condition_list_header_off",null,s_outlet_rule_condition_list_off_header,null,a);var o=create_element_div("outlet_rule_condition_list_off_"+z+"_"+j,"outlet_rule_condition_list",null,null,null,a);var t=0;for(var u=0;u<temporary_rule.condition.length;u++){if(temporary_rule.condition[u].flags&OUTLET_RULE_FLAG_OFF){create_condition_element(z,j,u,0,o);t++}}if(t==0){o.innerHTML=s_outlet_rule_no_conditions}create_element_div("outlet_btn_add_off_"+z+"_"+j,"outlet_btn_add",s_outlet_btn_addcondition_title,s_outlet_btn_addcondition,function(){outlet_create_condition_form(z,j,(temporary_rule.condition.length>0)?temporary_rule.condition.length:0,0)},a);create_element_div("outlet_rule_form_close"+z+"_"+j,"outlet_rule_form_close",s_outlet_rule_form_close_title,s_outlet_rule_form_close,function(){temporary_rule=null;remove_element("outlet_rule_form_"+z+"_"+j)},r);var y=create_element_div("btn_cancel","btn_cancel",s_btn_cancel_title,s_btn_cancel,function(){temporary_rule=null;remove_element("outlet_rule_form_"+z+"_"+j)},r);var D=create_element_div("btn_save","btn_save",s_btn_save_title,s_btn_save,function(){if(temporary_rule.condition.length>0){set_outlet_rule(z,j,((typeof OUTLET.outlet[z].rule[j]==="object")&&(OUTLET.outlet[z].rule[j]!==null))?"replace":"append",((OUTLET.outlet[z].rule.length>0&&j>0)?"and":"prio"),temporary_rule.date,temporary_rule.condition,function(d,i){if(i==0){temporary_rule=null;outlet_config(z);remove_element("outlet_rule_form_"+z+"_"+j)}else{alert("ERROR: code "+i)}})}else{alert("NO CONDITIONS")}},r);if(I!=null){r.scrollTop=I}}function outlet_rule_delete(a,b){if(!confirm(s_outlet_delete_rule_confirm+" №"+(b+1).toString()+" ?")){return}console.log("delete "+a+" "+b);delete_outlet_rule(a,b,function(c){if(c==0){console.log("rule deleted");outlet_update_rules(a)}else{console.log("rule is not deleted")}});return false}function print_outlet_rule_condition_element(f,m,d){var u="";var o=f.condition[m];var p=o.type&SENSOR_TYPE_MASK;var z=o.type&SENSOR_GROUP_MASK;var q=((o.type&SENSOR_COUNT_MASK)>>16);var v=o.flags;var x=o.val_beg;var n=o.val_end;if(d===1&&(v&OUTLET_RULE_FLAG_ON)){}else{if(d===0&&(v&OUTLET_RULE_FLAG_OFF)){}else{return""}}if(v&OUTLET_RULE_FLAG_RULE_ALG_PRIO){u+="="}else{if(v&OUTLET_RULE_FLAG_RULE_ALG_AND){u+="&"}else{if(v&OUTLET_RULE_FLAG_RULE_ALG_OR){u+="|"}}}var i=null;for(var g=0;g<OUTLET.sensor_list.length;g++){var r=0;for(r=0;r<8;r++){if(OUTLET.sensor_list[g].device_id[r]!=o.sensor_id[r]){break}}if(r==8){i=OUTLET.sensor_list[g].name;break}}if(i===null){var t="";for(var h=0;h<8;h++){t+=o.sensor_id[h].toString(16)}i="набор датчиков:&emsp;"+t}u+="&emsp;"+i+"&emsp;";u+='<div class="outlet_rule_condition_value">';if(p==SENSOR_TYPE_ONOFF){var A="unknown";var w=0;if(v&OUTLET_RULE_FLAG_ONOFF_ON){A="ON"}else{if(v&OUTLET_RULE_FLAG_ONOFF_OFF){A="OFF"}}u+="("+SENSOR_TYPE_NAMES[parseInt(p)]+": (";for(var k=0;k<16;k++){var c=s_sensor_logic_pin+("0"+(parseInt(k)+1).toString()).slice(-2);if(x&(1<<k)){u+=((w>0)?",":"")+c;w++}}u+=") == "+A+")";u+="<br />"}else{if(p==SENSOR_TYPE_DAYTIME){if(v&OUTLET_RULE_FLAG_TIME_EXACT){u+="("+SENSOR_DAYTIME_TYPE_NAMES[0]+") ";var b=new Date(x*1000);u+=("0"+b.getHours()).slice(-2)+":"+("0"+b.getMinutes()).slice(-2);if(f.date.flags&OUTLET_RULE_FLAG_DATE_ENABLE){var y=new Date(n*1000);u+="("+("0"+y.getHours()).slice(-2)+":"+("0"+y.getMinutes()).slice(-2)+")"}}else{if(v&OUTLET_RULE_FLAG_TIME_INTERVAL){u+="("+SENSOR_DAYTIME_TYPE_NAMES[1]+") ";u+=("0"+parseInt(x/3600).toString()).slice(-2)+":"+("0"+parseInt((x%3600)/60).toString()).slice(-2);if(f.date.flags&OUTLET_RULE_FLAG_DATE_ENABLE){u+=("0"+parseInt(n/3600).toString()).slice(-2)+":"+("0"+parseInt((n%3600)/60).toString()).slice(-2)}}}u+="<br />"}else{var c=("0"+(parseInt(q)+1).toString()).slice(-2);if((z==STM32_BME280_BUS1_GROUP)||(z==STM32_BME280_BUS2_GROUP)||(z==STM32_BH1750_BUS1_GROUP)||(z==STM32_BH1750_BUS2_GROUP)){c=s_sensor_digital_id+c}else{if((z==STM32_ADC1_GROUP)||(z==STM32_ADC2_GROUP)){c=s_sensor_analog_pin+c}}var j="";switch(parseInt(p)){case SENSOR_TYPE_TEMPERATURE:j=s_sensor_units_temperature;break;case SENSOR_TYPE_SOLUTION_TEMP:j=s_sensor_units_temperature;break;case SENSOR_TYPE_HUMIDITY:j=s_sensor_units_humidity;break;case SENSOR_TYPE_LIGHT_IN:j=s_sensor_units_light_in;break;case SENSOR_TYPE_LIGHT_OUT:j=s_sensor_units_light_out;break;case SENSOR_TYPE_CO2:j=s_sensor_units_co2;break;case SENSOR_TYPE_EC:j=s_sensor_units_ec;break;case SENSOR_TYPE_TDS:j=s_sensor_units_tds;break;case SENSOR_TYPE_PPM:j=s_sensor_units_ppm;break;case SENSOR_TYPE_PH:j=s_sensor_units_ph;break;case SENSOR_TYPE_RAW:j=s_sensor_units_raw;break;case SENSOR_TYPE_DEW_POINT:j=s_sensor_units_temperature;break;case SENSOR_TYPE_PRESSURE:j=s_sensor_units_pressure;break;case SENSOR_TYPE_SEA_LEVEL_PRESSURE:j=s_sensor_units_pressure;break;case SENSOR_TYPE_ALTITUDE:j=s_sensor_units_altitude;break;case SENSOR_TYPE_GYRO:j=s_sensor_units_gyro;break;case SENSOR_TYPE_COMPASS:j=s_sensor_units_compass;break}u+="(("+c+") "+SENSOR_TYPE_NAMES[parseInt(p)]+")";u+=((v&OUTLET_RULE_FLAG_RISE)?" > ":" < ")+Math.round(x*100)/100;u+=(f.date.flags&OUTLET_RULE_FLAG_DATE_ENABLE)?"("+n+")":"";u+=" "+j+"<br />"}}u+="</div><br />";return u}function outlet_create_rule_element(n,p,e){var d="outlet_rule_element_"+n+"_"+p;var m=document.getElementById(d);if(!m){m=create_element_div(d,"outlet_rule_element",null,null,null,e);if(!m){console.log("outlet create rule element");return}}var c=OUTLET.outlet[n].rule[p].flags;if(c&OUTLET_RULE_FLAG_RULE_ALG_PRIO){m.innerHTML+="="}else{if(c&OUTLET_RULE_FLAG_RULE_ALG_AND){m.innerHTML+="&"}else{if(c&OUTLET_RULE_FLAG_RULE_ALG_OR){m.innerHTML+="|"}}}m.innerHTML+="&emsp;Правило №"+(p+1).toString()+": ";m.innerHTML+="<br />";var f=null;var b=null;var o=null;var g=OUTLET.outlet[n].rule[p].date.flags;if(g&OUTLET_RULE_FLAG_DATE_ENABLE){f=OUTLET.outlet[n].rule[p].date.start;b=OUTLET.outlet[n].rule[p].date.stop;var q=new Date(f*1000);var a=new Date(b*1000);m.innerHTML+="действие:&emsp;"+("0"+q.getHours()).toString().slice(-2)+":"+("0"+q.getMinutes()).toString().slice(-2)+" "+("0"+q.getDate()).toString().slice(-2)+"/"+("0"+(parseInt(q.getMonth())+1).toString()).slice(-2)+"/"+q.getFullYear()+" - "+("0"+a.getHours()).toString().slice(-2)+":"+("0"+a.getMinutes()).toString().slice(-2)+" "+("0"+a.getDate()).toString().slice(-2)+"/"+("0"+(parseInt(a.getMonth())+1).toString()).slice(-2)+"/"+a.getFullYear()}else{m.innerHTML+=""}m.innerHTML+="<br />";if(g&OUTLET_RULE_FLAG_WEEK_ENABLE){o=OUTLET.outlet[n].rule[p].date.week_days;m.innerHTML+="дни недели:&emsp;";if(o&1){m.innerHTML+="Пн."}if(o&2){m.innerHTML+="Вт."}if(o&4){m.innerHTML+="Ср."}if(o&8){m.innerHTML+="Чт."}if(o&16){m.innerHTML+="Пт."}if(o&32){m.innerHTML+="Сб."}if(o&64){m.innerHTML+="Вс."}m.innerHTML+="<br /><br />"}var k="";var j="";for(var h=0;h<OUTLET.outlet[n].rule[p].condition_count;h++){k+=print_outlet_rule_condition_element(OUTLET.outlet[n].rule[p],h,1);j+=print_outlet_rule_condition_element(OUTLET.outlet[n].rule[p],h,0)}m.innerHTML+="ON:<br />"+k+"<br />";m.innerHTML+="OFF:<br />"+j+"<br />";var l=create_element_div("outlet_rule_control_"+n+"_"+p,"outlet_rule_control",null,null,null,m);create_element_div("outlet_rule_edit_"+n+"_"+p,"outlet_rule_edit",s_outlet_rule_edit_title,s_outlet_rule_edit,"outlet_create_rule_form("+n+", "+p+");",l);create_element_div("outlet_rule_delete_"+n+"_"+p,"outlet_rule_delete",s_outlet_rule_delete_title,s_outlet_rule_delete,"outlet_rule_delete("+n+","+p+");",l)}function outlet_update_rules(a){var b=document.getElementById("outlet_rule_list_"+a);if(!b){console.log("outlet update rules: no outlet rule list element");return}for(var c=b.childNodes.length-1;c>=0;c--){b.removeChild(b.childNodes[c])}if(!OUTLET.outlet[a].rule||OUTLET.outlet[a].rule.length==0){return}for(var c=0;c<OUTLET.outlet[a].rule.length;c++){outlet_create_rule_element(a,c,b)}}function outlet_name_edit(a){var c=document.getElementById("outlet_name_"+a);var b=document.getElementById("outlet_consumer_"+a);if(!c||!b){console.log("outlet_name_edit: no outlet config element");return}edit_name(s_outlet_change_name+" №"+("0"+(a+1).toString()).slice(-2),OUTLET.outlet[a].name,function(d){var e=OUTLET.outlet[a].state;set_outlet_config(a,b.value,e,d,function(){c.innerHTML=d;remove_editor()})},function(){remove_editor()})}function outlet_config(j){var h=null;var b=document.getElementById("outlet_config_page");if(b){h=b.scrollTop}b=create_element_div("outlet_config_page","outlet_config_page",null,null,null,document.body);if(!b){console.log("outlet config");return}var g=create_element_div("outlet_conf_header"+j,"outlet_conf_header",null,s_outlet_conf_header+" №"+("0"+(j+1).toString()).slice(-2),null,b);var m=create_element_div("outlet_name_"+j,"outlet_name_edit",s_outlet_change_name_title+" №"+("0"+(j+1).toString()).slice(-2),OUTLET.outlet[j].name,"outlet_name_edit("+j+");",b);var f=document.createElement("select");f.setAttribute("id","outlet_consumer_"+j);f.setAttribute("class","outlet_consumer");for(var e=0;e<1;e++){var a=document.createElement("option");a.setAttribute("value",e.toString());if(OUTLET.outlet[j].consumer==e){a.setAttribute("selected","true")}a.innerHTML=OUTLET_CONSUMER_NAMES[e];f.appendChild(a)}b.appendChild(f);b.appendChild(document.createElement("br"));var k=create_element_div("outlet_rule_list_"+j,"outlet_rule_list",null,null,null,b);b.appendChild(document.createElement("br"));outlet_update_rules(j);var c=create_element_div("btn_close","btn_close",s_btn_close_title,s_btn_close,function(){remove_element("outlet_config_page")},b);var d=create_element_div("btn_close_corner","btn_close_corner",s_btn_close_title,s_btn_close_corner,function(){remove_element("outlet_config_page")},b);var l=create_element_div("outlet_btn_add_"+j,"outlet_btn_add",s_outlet_btn_addrule_title,s_outlet_btn_addrule,function(){outlet_create_rule_form(j,null)},b);if(h!=null){b.scrollTop=h}}function outlet_page_create(){var a=create_element_div("page_info","page_info",null,null,null,document.body);if(!a){return}outlet_service();start_service(outlet_service);outlet_page_update()}function outlet_update_info(a){get_outlet_device_config(function(b){get_outlet_count(function(c){if(c==0){get_outlet_config(0,OUTLET.count,function(d){if(d==0){get_outlet_sensor_list(function(e){outlet_get_next_outlet_rules(-1,0);if(a){a()}outlet_update()})}else{alert("ERROR: get outlet config: code "+d)}})}else{alert("ERROR: get outlet count: code "+c)}})})}function outlet_get_next_outlet_rules(a,b){if(b!=0){console.log("error: cannot get rules: code "+b);return}a++;if(a>=OUTLET.count){console.log("get rules: end of outlets");return}get_outlet_rules(a,0,100,outlet_get_next_outlet_rules)}var sensor_list_time=0;function outlet_service(){sensor_list_time++;get_outlet_count(function(a){get_outlet_config(0,OUTLET.count,function(b){if(sensor_list_time>=5){get_outlet_sensor_list(function(c){if(under_controller){outlet_get_next_outlet_rules(-1,0)}});sensor_list_time=0}outlet_page_update()})})}var s_sensor_logic_pin="L";var s_sensor_logic_pin_state_on="Да (замкнуто)";var s_sensor_logic_pin_state_off="Нет (разомкнуто)";var s_sensor_logic_title="";var s_sensor_analog_pin="A";var s_sensor_device_name_title="Изменение имени устройства";var s_sensor_device_id_title="ID устройства";var s_sensor_block_datetime_header="Дата и время устройства";var s_sensor_block_digital_header="Цифровые датчики";var s_sensor_block_analog_header="Аналоговые датчики";var s_sensor_block_logic_header="Логические датчики";var s_sensor_date_title="Дата устройства";var s_sensor_time_title="Время устройства";var s_sensor_analog_title="Калибровка датчика";var s_sensor_digital_title="";var s_sensor_digital_id="D";var s_sensor_digital_name_title="Изменение имени датчика";var s_sensor_config_title="Настроить датчики";var s_sensor_edit_device_name_header="Изменение название набора датчиков";var s_sensor_edit_digital_name_header="Изменение названия цифрового датчика";var s_sensor_system_date="Изменение даты устройства";var s_sensor_system_time="Изменение времени устройства";var s_sensor_analog_config="Настройка аналоговых входов";var s_sensor_analog_type="Тип:";var s_sensor_analog_tempcomp="Температурная компенсация:";var s_sensor_analog_no_temp_comp="Не требуется";var s_sensor_analog_ppm_conv_factor="Фактор конверсии PPM:";var s_sensor_analog_pin_distance="Расстояние между измер.пинами:";var s_sensor_analog_ppm_conv_factor_hint="стандарт: 500,640,700,720";var s_sensor_analog_pin_distance_unit="мм";var s_sensor_logic_config="Настройка логических входов";var s_sensor_logic_on="Вкл.";var s_sensor_logic_off="Выкл.";var s_sensor_logic_off_title="Включить";var s_sensor_logic_on_title="Выключить";var s_sensor_calibr_config="Калибровка датчика";var s_btn_add_value_title="Занести значение";var s_btn_add_value="Занести значение";var s_btn_reset_calibr_title="Сброс калибровки";var s_btn_reset_calibr="Сбросить";var s_sensor_calibr_value_hint="Занесите желаемое текущее значение";function date_from_sensor_value(e){var g=new Date();var h=g.getTimezoneOffset()*60;g=new Date((e-h)*1000);var a=g.getDate();var f=g.getMonth();var c=g.getFullYear();var b=("0"+a.toString()).slice(-2)+"."+("0"+(f+1).toString()).slice(-2)+"."+c.toString();return b}function time_from_sensor_value(c){var g=new Date();var h=g.getTimezoneOffset()*60;var b=((c&16777215)-h);b=((b>(3600*24))?(b-(3600*24)):b);var a=parseInt(b/3600);var f=parseInt((b%3600)/60);var e=("0"+a.toString()).slice(-2)+":"+("0"+f.toString()).slice(-2);return e}function create_sensor_datetime_value(c,b,h,f,i,j,g){var d=create_element_div(c,b,h,null,j,g);if(!d){console.log("cannot create sensor datetime value block");return null}var e=create_element_img(c+"_img","sensor_datetime_value_img",null,null,f,null,d);var a=create_element_div(c+"_val","sensor_datetime_value_val",null,i,null,d);return d}function create_sensor_block(d,f,g,a,b){var e=create_element_div(d,f,null,null,null,b);if(!e){console.log("cannot create sensor block");return null}var c=create_element_div(d+"_hdr","sensor_block_header",null,g,null,e);if(typeof a==="function"||typeof a==="string"){create_element_img(d+"_img_config","sensor_config_img",s_sensor_config_title,null,tar_get_image_src(img_prefix+"sensor_conf.png"),a,e)}e.appendChild(document.createElement("br"));return e}function create_logic_value(b,n,f,e,m,l){var h=create_element_div(f,e,m,null,null,l);if(!h){console.log("cannot create sensor logic value block");return null}var a=s_sensor_logic_pin+("0"+(b+1).toString()).slice(-2);var g=(SENSOR.logic_names.length>b&&SENSOR.logic_names[b])?SENSOR.logic_names[b]:"";var p=(n&(1<<b))?s_sensor_logic_pin_state_on:s_sensor_logic_pin_state_off;var o=((n&(1<<b))?"_on":"_off");var k=tar_get_image_src(img_prefix+"logic"+o+".png");var j=create_element_div(f+"_num","sensor_logic_value_num",null,a,null,h);var i=create_element_img(f+"_img","sensor_logic_value_img",null,null,k,null,h);h.appendChild(document.createElement("br"));var c=create_element_div(f+"_name","sensor_logic_value_name",null,g,null,h);h.appendChild(document.createElement("br"));var d=create_element_div(f+"_val","sensor_logic_value_val",null,p,null,h);return h}function create_sensor_logic_values(c,a){if(typeof c!=="number"){console.log("cannot create logic values from sensor value: invalid type of value");return}for(var b=0;b<16;b++){if(is_logic_pin_enabled(b,c)){var d=create_logic_value(b,c,"sensor_logic_"+b,"sensor_logic_value",s_sensor_logic_title,a)}}}function get_sensor_view(a,c){var b="";var d="";switch(a){case SENSOR_TYPE_LIGHT_IN:b=tar_get_image_src(img_prefix+"light_in.png");d=(Math.round(c*100)/100).toString();break;case SENSOR_TYPE_LIGHT_OUT:b=tar_get_image_src(img_prefix+"light_out.png");d=(Math.round(c*100)/100).toString();break;case SENSOR_TYPE_TEMPERATURE:b=tar_get_image_src(img_prefix+"temp.png");d=(Math.round(c*100)/100).toString();break;case SENSOR_TYPE_HUMIDITY:b=tar_get_image_src(img_prefix+"humi.png");d=(Math.round(c*100)/100).toString();break;case SENSOR_TYPE_DEW_POINT:b=tar_get_image_src(img_prefix+"dew.png");d=(Math.round(c*100)/100).toString();break;case SENSOR_TYPE_PRESSURE:b=tar_get_image_src(img_prefix+"pres.png");d=(Math.round(c*0.750061561303*100)/100).toString();break;case SENSOR_TYPE_ALTITUDE:b=tar_get_image_src(img_prefix+"alti.png");d=(Math.round(c*100)/100).toString();break;case SENSOR_TYPE_SEA_LEVEL_PRESSURE:b=tar_get_image_src(img_prefix+"spres.png");d=(Math.round(c*0.750061561303*100)/100).toString();break;case SENSOR_TYPE_SOLUTION_TEMP:b=tar_get_image_src(img_prefix+"sol_temp.png");d=(Math.round(c*100)/100).toString();break;case SENSOR_TYPE_EC:b=tar_get_image_src(img_prefix+"ec.png");d=(Math.round(c*100)/100).toString();break;case SENSOR_TYPE_PH:b=tar_get_image_src(img_prefix+"ph.png");d=(Math.round(c*100)/100).toString();break;case SENSOR_TYPE_TDS:b=tar_get_image_src(img_prefix+"tds.png");d=(Math.round(c*100)/100).toString();break;case SENSOR_TYPE_PPM:b=tar_get_image_src(img_prefix+"ppm.png");d=(Math.round(c*100)/100).toString();break;case SENSOR_TYPE_CO2:b=tar_get_image_src(img_prefix+"co2.png");d=(Math.round(c*100)/100).toString();break;case SENSOR_TYPE_GYRO:b=tar_get_image_src(img_prefix+"gyro.png");d=(Math.round(c*100)/100).toString();break;case SENSOR_TYPE_COMPASS:b=tar_get_image_src(img_prefix+"compass.png");d=(Math.round(c*100)/100).toString();break;case SENSOR_TYPE_RAW:b=tar_get_image_src(img_prefix+"raw.png");d=parseInt(c).toString();break;default:console.log("sensor type is not supported");return}return[b,d]}function create_sensor_analog_value(a,o,f,e,m,n,p,l){var g=s_sensor_analog_pin+("0"+(a+1).toString()).slice(-2);var c=(SENSOR.adc_names.length>a&&SENSOR.adc_names[a])?SENSOR.adc_names[a]:"";var h=create_element_div(f,e,m,null,p,l);if(!h){console.log("cannot create sensor analog value block");return null}var k=get_sensor_view(o,n);var j=create_element_div(f+"_num","sensor_analog_value_num",null,g,null,h);var b=create_element_div(f+"_name","sensor_analog_value_name",null,c,null,h);h.appendChild(document.createElement("br"));var i=create_element_img(f+"_img","sensor_analog_value_img",null,null,k[0],null,h);var d=create_element_div(f+"_val","sensor_analog_value_val",null,k[1],null,h);return h}function create_sensor_digital_value(j,k,c,b,h,i,l,g){var d=create_element_div(c,b,h,null,l,g);if(!d){console.log("cannot create sensor digital value block");return null}var f=get_sensor_view(k,i);var e=create_element_img(c+"_img","sensor_digital_value_img",null,null,f[0],null,d);var a=create_element_div(c+"_val","sensor_digital_value_val",null,f[1],null,d);return d}function sensor_page_update(){var j=document.getElementById("page_info");if(!j){console.log("cannot update sensor page: no page_info element");return}for(var q=j.childNodes.length-1;q>=0;q--){j.removeChild(j.childNodes[q])}if(!SENSOR){console.log("no SENSOR configurations");return}var p=create_element_div("sensor_device_name","sensor_device_name",s_sensor_device_name_title,SENSOR.name,sensor_edit_device_name,j);j.appendChild(document.createElement("br"));var b="ID: ";for(var q=0;q<SENSOR.device_id.length;q++){b+=((q>0&&!(q%2))?" ":"")+("0"+SENSOR.device_id[q].toString(16)).slice(-2)}var a=create_element_div("sensor_device_id","sensor_device_id",s_sensor_device_id_title,b,sensor_device_cfg,j);j.appendChild(document.createElement("br"));var m=create_sensor_block("sensor_block_datetime","sensor_block_datetime",s_sensor_block_datetime_header,null,j);var f=create_sensor_block("sensor_block_digital","sensor_block_digital",s_sensor_block_digital_header,null,j);var n=create_sensor_block("sensor_block_analog","sensor_block_analog",s_sensor_block_analog_header,sensor_analog_config,j);var h=create_sensor_block("sensor_block_logic","sensor_block_logic",s_sensor_block_logic_header,sensor_logic_config,j);for(var q=0;q<SENSOR.sensor_bcast.sensor_count;q++){var e=(SENSOR.sensor_bcast.metric[q].type&SENSOR_TYPE_MASK);var k=(SENSOR.sensor_bcast.metric[q].type&SENSOR_GROUP_MASK);var d=SENSOR.sensor_bcast.metric[q].value;if(e==SENSOR_TYPE_DATE){var l=create_sensor_datetime_value("sensor_date","sensor_datetime_value",s_sensor_date_title,tar_get_image_src(img_prefix+"calendar.png"),date_from_sensor_value(d),sensor_change_date,m)}else{if(e==SENSOR_TYPE_DAYTIME){var s=create_sensor_datetime_value("sensor_time","sensor_datetime_value",s_sensor_time_title,tar_get_image_src(img_prefix+"clock.png"),time_from_sensor_value(d),sensor_change_time,m)}else{if(e==SENSOR_TYPE_ONOFF){create_sensor_logic_values(d,sensor_block_logic)}else{if(e==SENSOR_TYPE_ONOFF_CHANGED){}else{var c=((SENSOR.sensor_bcast.metric[q].type&SENSOR_COUNT_MASK)>>16);if(k==STM32_ADC1_GROUP||k==STM32_ADC2_GROUP){var r=create_sensor_analog_value(c,e,"sensor_analog_"+c+"_"+e,"sensor_analog_value",s_sensor_analog_title,d,"sensor_analog_calibr("+c+");",sensor_block_analog)}else{if(k==STM32_BME280_BUS1_GROUP||k==STM32_BME280_BUS2_GROUP||k==STM32_BH1750_BUS1_GROUP||k==STM32_BH1750_BUS2_GROUP){var g=document.getElementById("sensor_block_digital_"+c);if(!g){g=create_element_div("sensor_block_digital_"+c,"sensor_block_digital_id",null,null,null,sensor_block_digital);var o=s_sensor_digital_id+(c+1).toString()+": "+SENSOR.digital_names[c];create_element_div("sensor_block_digital_"+c+"_name","sensor_digital_name",s_sensor_digital_name_title,o,"sensor_edit_digital_name("+c+");",g)}var f=create_sensor_digital_value(c,e,"sensor_digital_"+c+"_"+e,"sensor_digital_value",s_sensor_digital_title,d,null,g)}}}}}}}copyright(j)}function sensor_page_create(){var a=create_element_div("page_info","page_info",null,null,null,document.body);if(!a){return}get_sensor_config(function(){sensor_service();start_service(sensor_service)});sensor_page_update()}function sensor_edit_device_name(){edit_name(s_sensor_edit_device_name_header,SENSOR.name,function(a){set_sensor_device_name(a,function(){remove_editor()})},function(){remove_editor()})}function sensor_edit_digital_name(a){edit_name(s_sensor_edit_digital_name_header+" №"+(parseInt(a)+1).toString(),SENSOR.digital_names[a],function(b){set_digital_sensor_name(a,b,function(){remove_editor()})},function(){remove_editor()})}function sensor_adc_pin_type_changed(b){var a="adcpin_"+b;var e=document.getElementById(a+"_type");var d=document.getElementById(a+"_name");var c=document.getElementById(a+"_tempcomp");create_adc_editor_form(b,e.value,c.value,d.value,null)}function create_adc_editor_form(g,o,l,s,d){var n="adcpin_"+g;var e=create_element_div(n,"sensor_analog_pin_form",null,null,null,d);var a=s_sensor_analog_pin+("0"+(g+1).toString()).slice(-2);var j=create_element_div(n+"_num","sensor_analog_pin_num",null,a,null,e);e.innerHTML+=s_sensor_analog_type;if(!o){o=SENSOR.stm32.adc[g].type}if(!l){l=SENSOR.stm32.adc[g].temp_compensate_adc_pin}if(!s){s=SENSOR.adc_names[g]}var r=document.createElement("select");r.setAttribute("id",n+"_type");r.setAttribute("class","sensor_analog_pin_type");r.setAttribute("onchange","sensor_adc_pin_type_changed("+g+");");for(var m=0;m<SENSOR_ANALOG_TYPES.length;m++){var b=document.createElement("option");b.setAttribute("value",SENSOR_ANALOG_TYPES[m][0]);if((o&SENSOR_TYPE_MASK)==SENSOR_ANALOG_TYPES[m][0]){b.setAttribute("selected","true")}b.innerHTML=SENSOR_ANALOG_TYPES[m][1];r.appendChild(b)}e.appendChild(r);e.appendChild(document.createElement("br"));if(o==SENSOR_TYPE_EC){var f=(SENSOR.stm32.adc[g].ex&&SENSOR.stm32.adc[g].ex.ec)?SENSOR.stm32.adc[g].ex.ec.ppm_conv_factor:EC_PPM_CONVERSION_FACTOR_MIN;var p=(SENSOR.stm32.adc[g].ex&&SENSOR.stm32.adc[g].ex.ec)?SENSOR.stm32.adc[g].ex.ec.pin_distance:1;e.innerHTML+=s_sensor_analog_ppm_conv_factor;var q=document.createElement("input");q.setAttribute("id",n+"_ppm_conv_factor");q.setAttribute("class","sensor_analog_pin_ppm_conv_factor");q.setAttribute("type","number");q.setAttribute("min",EC_PPM_CONVERSION_FACTOR_MIN.toString());q.setAttribute("max","1000");q.setAttribute("value",f);e.appendChild(q);e.innerHTML+=s_sensor_analog_ppm_conv_factor_hint;e.appendChild(document.createElement("br"));e.innerHTML+=s_sensor_analog_pin_distance;var c=document.createElement("input");c.setAttribute("id",n+"_pin_distance");c.setAttribute("class","sensor_analog_pin_distance");c.setAttribute("type","number");c.setAttribute("min","1");c.setAttribute("max","100");c.setAttribute("value",p*10);e.appendChild(c);e.innerHTML+=s_sensor_analog_pin_distance_unit;e.appendChild(document.createElement("br"))}e.innerHTML+=s_sensor_analog_tempcomp;var h=document.createElement("select");h.setAttribute("id",n+"_tempcomp");h.setAttribute("class","sensor_analog_pin_temp_comp");for(var m=0;m<SUPPORTED_ADC_PINS;m++){var b=document.createElement("option");b.setAttribute("value",m.toString());if(l==m){b.setAttribute("selected","true")}if(m==0){b.innerHTML=s_sensor_analog_no_temp_comp}else{b.innerHTML=s_sensor_analog_pin+("0"+m.toString()).slice(-2)}h.appendChild(b)}e.appendChild(h);e.appendChild(document.createElement("br"));var k=document.createElement("input");k.setAttribute("id",n+"_name");k.setAttribute("type","text");k.setAttribute("class","sensor_analog_pin_name");k.value=s;e.appendChild(k)}function sensor_analog_config_save(n,a){if(a!=0){console.log("sensor analog config save error on adc pin "+n);return}n++;while(n<SUPPORTED_ADC_PINS){var k="adcpin_"+n;var j=document.getElementById(k+"_type");var f=document.getElementById(k+"_name");var b=document.getElementById(k+"_tempcomp");if(!j||!f||!b){console.log("sensor analog config save: no elements with data");return}var m=j.value;var a=((m&SENSOR_TYPE_MASK)==SENSOR_TYPE_NULL)?false:true;var d=b.value;var i=f.value;var e=-1;var l=-1;var g=false;if(m==SENSOR_TYPE_EC){var c=document.getElementById(k+"_ppm_conv_factor");var h=document.getElementById(k+"_pin_distance");if(!c||!h){console.log("sensor analog congfig save: no element of EC");return}e=c.value;l=h.value;if(!SENSOR.stm32.adc[n].ex||!SENSOR.stm32.adc[n].ex.ec||SENSOR.stm32.adc[n].ex.ec.pin_distance!=(l*10)||SENSOR.stm32.adc[n].ex.ec.ppm_conv_factor!=e){g=true}}if(SENSOR.stm32.adc[n].type!=m||SENSOR.stm32.adc[n].temp_compensate_adc_pin!=d||SENSOR.adc_names[n]!=i||g){if(m==SENSOR_TYPE_NULL){m=SENSOR.stm32.adc[n].type}set_adc_pin(n,m,d,a,e,l,function(o,p){if(SENSOR.adc_names[n]!=i||!a){set_adc_sensor_name(n,(!a)?"":i,sensor_analog_config_save)}else{sensor_analog_config_save(o,p)}});break}n++}if(n>=SUPPORTED_ADC_PINS){remove_element("sensor_analog_editor")}}function sensor_analog_config(){var c=create_element_div("sensor_analog_editor","sensor_analog_editor",null,null,null,document.body);if(!c){console.log("analog editor");return}var e=create_element_div("sensor_analog_editor_header","sensor_analog_editor_header",null,s_sensor_analog_config,null,c);for(var b=0;b<SUPPORTED_ADC_PINS;b++){create_adc_editor_form(b,null,null,null,c)}var a=create_element_div("btn_cancel","btn_cancel",s_btn_cancel_title,s_btn_cancel,function(){remove_element("sensor_analog_editor")},c);var d=create_element_div("btn_save","btn_save",s_btn_save_title,s_btn_save,function(){sensor_analog_config_save(-1,0)},c)}function sensor_logic_pin_changed(b){var a="logpin_"+b;var d=document.getElementById(a+"_enabled");if(!d){console.log("sensor logic pin changed: no element");return}var e=s_sensor_logic_off;var f=s_sensor_logic_off_title;var c="sensor_logic_pin_disabled";if(d.getAttribute("class")=="sensor_logic_pin_disabled"){e=s_sensor_logic_on;f=s_sensor_logic_on_title;c="sensor_logic_pin_enabled"}d.setAttribute("class",c);d.setAttribute("title",f);d.innerHTML=e}function create_logic_editor_form(a,i){var k="logpin_"+a;var d=create_element_div(k,"sensor_logic_pin_form",null,null,null,i);var e=s_sensor_logic_pin+("0"+(a+1).toString()).slice(-2);var h=create_element_div(k+"_num","sensor_logic_pin_num",null,e,null,d);var c=s_sensor_logic_off;var j=s_sensor_logic_off_title;var b="sensor_logic_pin_disabled";if(is_local_logic_pin_enabled(a)){c=s_sensor_logic_on;j=s_sensor_logic_on_title;b="sensor_logic_pin_enabled"}var g=create_element_div(k+"_enabled",b,j,c,"sensor_logic_pin_changed("+a+");",d);d.appendChild(document.createElement("br"));var f=document.createElement("input");f.setAttribute("id",k+"_name");f.setAttribute("type","text");f.setAttribute("class","sensor_logic_pin_name");f.value=SENSOR.logic_names[a];d.appendChild(f)}function sensor_logic_config_save(b,d){if(d!=0){console.log("sensor logic config save error on logic pin "+b);return}b++;while(b<SUPPORTED_MCP23017_SENSORS/2){var a="logpin_"+b;var e=document.getElementById(a+"_enabled");var c=document.getElementById(a+"_name");if(!e||!c){console.log("sensor logic config save: no elements with data");return}if((e.getAttribute("class")=="sensor_logic_pin_enabled"&&!is_local_logic_pin_enabled(b))||(e.getAttribute("class")=="sensor_logic_pin_disabled"&&is_local_logic_pin_enabled(b))||(SENSOR.logic_names[b]!=c.value)){if(e.getAttribute("class")=="sensor_logic_pin_disabled"){c.value=""}set_logic_pin(b,c.value,(e.getAttribute("class")=="sensor_logic_pin_enabled"),sensor_logic_config_save);break}b++}if(b>=SUPPORTED_MCP23017_SENSORS/2){remove_element("sensor_logic_editor")}}function sensor_logic_config(){var c=create_element_div("sensor_logic_editor","sensor_logic_editor",null,null,null,document.body);if(!c){console.log("logic editor");return}var e=create_element_div("sensor_logic_editor_header","sensor_logic_editor_header",null,s_sensor_logic_config,null,c);for(var b=0;b<SUPPORTED_MCP23017_SENSORS/2;b++){create_logic_editor_form(b,c)}var a=create_element_div("btn_cancel","btn_cancel",s_btn_cancel_title,s_btn_cancel,function(){remove_element("sensor_logic_editor")},c);var d=create_element_div("btn_save","btn_save",s_btn_save_title,s_btn_save,function(){sensor_logic_config_save(-1,0)},c)}function sensor_change_date(){var f=new Date();var g=f.getTimezoneOffset()*60;var e=f.getTime();var b=new Date();for(var c=0;c<SENSOR.sensor_bcast.sensor_count;c++){var a=(SENSOR.sensor_bcast.metric[c].type&SENSOR_TYPE_MASK);if(a==SENSOR_TYPE_DATE){b=new Date((SENSOR.sensor_bcast.metric[c].value-g)*1000)}else{if(a==SENSOR_TYPE_DAYTIME){e=((SENSOR.sensor_bcast.metric[c].value&16777215)-g);e=((e>(3600*24))?(e-(3600*24)):e)}}}create_calendar(s_sensor_system_date,b.getFullYear(),b.getMonth(),function(d){d=parseInt(d)+parseInt(e);d=new Date(d*1000);set_system_datetime(d,function(){remove_calendar()})})}function sensor_change_time(){var f=new Date();var g=f.getTimezoneOffset()*60;var e=f.getTime();var b=new Date();for(var c=0;c<SENSOR.sensor_bcast.sensor_count;c++){var a=(SENSOR.sensor_bcast.metric[c].type&SENSOR_TYPE_MASK);if(a==SENSOR_TYPE_DATE){b=new Date((SENSOR.sensor_bcast.metric[c].value)*1000)}else{if(a==SENSOR_TYPE_DAYTIME){e=((SENSOR.sensor_bcast.metric[c].value&16777215)-g);e=((e>(3600*24))?(e-(3600*24)):e)}}}edit_time(s_sensor_system_time,b.getTime()/1000,g,function(d){set_system_datetime(parseInt(d),parseInt(g),function(h){if(!h){remove_editor()}else{alert(s_error_code+h)}})},function(){remove_editor()})}function sensor_analog_calibr(o){var h=create_element_div("sensor_calibr_editor","sensor_calibr_editor",null,null,null,document.body);if(!h){console.log("calibr editor");return}var m=create_element_div("sensor_calibr_editor_header","sensor_calibr_editor_header",null,s_sensor_calibr_config,null,h);var j=get_sensor_view((SENSOR.stm32.adc[o].type&SENSOR_TYPE_MASK),0);var d=s_sensor_analog_pin+("0"+(o+1).toString()).slice(-2);var f=create_element_div("sensor_calibr_num","sensor_analog_pin_num",null,d,null,m);var g=create_element_img("sensor_calibr_img","sensor_analog_value_img",null,null,j[0],null,m);var b=create_element_div("sensor_clibr_editor_form","sensor_calibr_editor_form",null,s_sensor_calibr_value_hint,null,h);b.appendChild(document.createElement("br"));var l=document.createElement("input");l.setAttribute("id","sensor_calibr_value");l.setAttribute("type","number");l.setAttribute("min","-999999.99");l.setAttribute("max","999999.99");l.setAttribute("step","any");l.setAttribute("class","sensor_calibr_value");b.appendChild(l);var k="start";var p=0;var i=create_element_div("btn_add_value","btn_add_value",s_btn_add_value_title,s_btn_add_value,function(){if(p==19){k="finish"}else{if(p>19){alert("maximum 20 values is already written")}}var r=document.getElementById("sensor_calibr_value");var q=document.getElementById("sensor_calibr_editor_counter");set_adc_calibr(o,r.value,k,function(s){if(s==0){console.log("OK");if(k=="start"){k=null}p++;r.focus();q.innerHTML=p+"/20"}else{alert("status: "+s)}})},b);b.appendChild(document.createElement("br"));var a=create_element_div("sensor_calibr_editor_counter","sensor_calibr_editor_counter",null,"0/20",null,b);b.appendChild(document.createElement("br"));var n=create_element_div("btn_reset","btn_reset",s_btn_reset_calibr_title,s_btn_reset_calibr,function(){set_adc_calibr(o,null,"clear",function(q){if(q==0){var r=document.getElementById("sensor_calibr_editor_counter");r.innerHTML="20/20"}else{alert("status: "+q)}})},b);var c=create_element_div("btn_cancel","btn_cancel",s_btn_cancel_title,s_btn_cancel,function(){remove_element("sensor_calibr_editor")},h);var e=create_element_div("btn_save","btn_save",s_btn_save_title,s_btn_save,function(){set_adc_calibr(o,null,"finish",function(q){if(q==0){remove_element("sensor_calibr_editor")}else{alert("status: "+q)}})},h)}function sensor_device_cfg(){console.log("sensor devcie cfg")}function sensor_update_info(a){get_sensor_config(function(b){get_sensor_metric(function(){if(a){a()}})})}var info_time=0;function sensor_service(){get_sensor_metric(function(a){if(info_time>=10||under_controller){info_time=0;get_sensor_config(null)}else{info_time++}sensor_page_update()})}var s_toggle_name_autonomus_mode="режим";var s_toggle_name_controller_mode="шлюз";var s_toggle_autonomus_mode_auto_title="Перейти в автоматический режим";var s_toggle_autonomus_mode_auto="Авто";var s_toggle_autonomus_mode_manual_title="Перейти в ручной режим";var s_toggle_autonomus_mode_manual="Ручной";var s_toggle_controller_mode_on_title="Работать через шлюз";var s_toggle_controller_mode_on="Вкл.";var s_toggle_controller_mode_off_title="Перейти в автономный режим";var s_toggle_controller_mode_off="Выкл.";var s_system_ctl_name_title="Изменение адреса шлюза";var s_system_ctl_edit_header='Изменение адреса шлюза<br /><span style="font-size:24px;">напр.: http://mygateway.com/path/to/gate/dir/<br />если имя домена не латинское, то заполняется в punycode виде</span>';var s_system_no_controller="Введите адрес шлюза";var s_wifi_mode_ap='Создать новую сеть (режим "точки доступа")';var s_wifi_mode_sta='Подключиться к сети (режим "станция")';var s_wifi_ssid_hint="введите имя (SSID) сети";var s_wifi_pass_hint="введите пароль сети";var s_wifi_btn_connect_title="Подключить";var s_wifi_btn_connect="Подключить";var s_fill_all_fields_please="Пожалуйста, заполните все поля, прежде чем попробовать снова.";var s_find_device_on_another_net="Устройство в этой сети не доступно. Ищите его в другой сети: ";var s_error_wifi_reconnection="К сожалению, произошла какая-то ошибка";var s_system_update_interface_title="Обновить интерфейс";var s_system_update_interface="Загрузить";var s_system_wifi_container_header="Изменение WI-FI подключения";var s_system_interface_container_header="Обновление интерфейса (опасно!)";var s_system_controller_container_header="Работа через шлюз";var s_system_mode_container_header="Режим работы устройства";var s_system_info_runlog_header="Информация о старте системы";var s_system_info_errlog_header="Информация об ошибках системы";var s_system_info_mem_header="Информация о доступной памяти на устройстве";var s_system_get_info_title="Подробная информация о системе";var s_system_get_info="Информация о системе";var s_system_heap_free_ram="Свободно RAM: ";var s_fs_total_size="Всего флэш: ";var s_fs_used_avail="Использовано/Доступно: ";var s_system_should_not_turn_off_controller="Нельзя отсоединить устройство от шлюза через шлюз. Это следует делать только при подключении к устройству напрямую. Иначе вы потеряете контроль над устройством.";var wifi={};function system_page_update(){var t=document.getElementById("page_info");if(!t){console.log("cannot update system page: no page_info element");return}for(var u=t.childNodes.length-1;u>=0;u--){t.removeChild(t.childNodes[u])}wifi.mode="ap";wifi.ssid="";wifi.pass="";var r=create_element_div("system_wifi_container","system_wifi_container",null,null,null,t);t.appendChild(document.createElement("br"));create_element_div("system_header_wifi","system_header",null,s_system_wifi_container_header,null,r);r.appendChild(document.createElement("br"));var v=document.createElement("select");v.setAttribute("id","system_wifi_mode");v.setAttribute("class","system_wifi_mode");v.addEventListener("change",function(i){wifi.mode=this.value},false);var c=document.createElement("option");c.setAttribute("value","ap");c.innerHTML=s_wifi_mode_ap;v.appendChild(c);var y=document.createElement("option");y.setAttribute("value","sta");y.innerHTML=s_wifi_mode_sta;v.appendChild(y);r.appendChild(v);var l=document.createElement("input");l.setAttribute("id","ssid");l.setAttribute("class","wifi_input");l.setAttribute("type","text");l.setAttribute("value","");l.setAttribute("placeholder",s_wifi_ssid_hint);l.addEventListener("change",function(i){wifi.ssid=this.value},false);r.appendChild(l);var a=document.createElement("input");a.setAttribute("id","pass");a.setAttribute("class","wifi_input");a.setAttribute("type","password");a.setAttribute("value","");a.setAttribute("placeholder",s_wifi_pass_hint);a.addEventListener("change",function(i){wifi.pass=this.value},false);r.appendChild(a);var j=create_element_div("btn_connect","btn_save",s_wifi_btn_connect_title,s_wifi_btn_connect,function(){if(wifi.mode==""||wifi.ssid==""||wifi.pass==""){alert(s_fill_all_fields_please);return}var i=setTimeout(function(){alert(s_find_device_on_another_net+'"'+wifi.ssid+'"');i=null},4000);wifi_config(wifi.mode,wifi.ssid,wifi.pass,null,null,null,null,1,0,function(z){if(i){clearTimeout(i);alert(s_error_wifi_reconnection);return}})},r);var o=create_element_div("system_ctl_container","system_ctl_container",null,null,null,t);t.appendChild(document.createElement("br"));var n=(DEVICE&&DEVICE.state)?DEVICE.state&DEVICE_STATE_MODE_MASK:0;var m=(n&DEVICE_STATE_MODE_CTL)?"toggle_btn_active":"toggle_btn_inactive";var w=(n&DEVICE_STATE_MODE_CTL)?"toggle_btn_inactive":"toggle_btn_active";var k=(n&DEVICE_STATE_MODE_AUTO)?"toggle_btn_active":"toggle_btn_inactive";var e=(n&DEVICE_STATE_MODE_AUTO)?"toggle_btn_inactive":"toggle_btn_active";var b=create_element_div("system_autonomus_container","system_autonomus_container",null,null,null,o);o.appendChild(document.createElement("br"));create_element_div("system_header_mode","system_header",null,s_system_mode_container_header,null,b);b.appendChild(document.createElement("br"));create_toggle_mode(s_toggle_name_autonomus_mode,"autonomous","toggle_autonomus_auto",k,s_toggle_autonomus_mode_auto_title,s_toggle_autonomus_mode_auto,function(){set_system_mode("autonomus_auto",function(i){if(i==0){console.log("system toggle OK");system_page_update()}else{console.log("system toggle ERROR")}})},"toggle_autonomus_manual",e,s_toggle_autonomus_mode_manual_title,s_toggle_autonomus_mode_manual,function(){set_system_mode("autonomus_manual",function(i){if(i==0){console.log("system toggle OK");system_page_update()}else{console.log("system toggle ERROR")}})},b);var s=create_element_div("system_controller_container","system_controller_container",null,null,null,o);o.appendChild(document.createElement("br"));create_element_div("system_header_controller","system_header",null,s_system_controller_container_header,null,s);s.appendChild(document.createElement("br"));var q="";if(DEVICE&&DEVICE.controller){var d=(DEVICE.controller.port==80)?"http://":"";q=d+DEVICE.controller.name+"/"+DEVICE.controller.path}var h=create_element_div("system_controller_name","system_controller_name",s_system_ctl_name_title,q,system_edit_ctl_name,s);s.appendChild(document.createElement("br"));create_toggle_mode(s_toggle_name_controller_mode,"controller","toggle_controller_on",m,s_toggle_controller_mode_on_title,s_toggle_controller_mode_on,function(){set_system_mode("controller_on",function(i){if(i==0){console.log("system toggle OK");system_page_update()}else{console.log("system toggle ERROR")}})},"toggle_controller_off",w,s_toggle_controller_mode_off_title,s_toggle_controller_mode_off,function(){if(under_controller){alert(s_system_should_not_turn_off_controller);return}set_system_mode("controller_off",function(i){if(i==0){console.log("system toggle OK");system_page_update()}else{console.log("system toggle ERROR")}})},s);var g=create_element_div("system_interface_container","system_interface_container",null,null,null,o);o.appendChild(document.createElement("br"));create_element_div("system_header_interface","system_header",null,s_system_interface_container_header,null,g);g.appendChild(document.createElement("br"));var p=document.createElement("input");p.setAttribute("class","select_interface");p.setAttribute("type","file");p.setAttribute("name","iface");g.appendChild(p);var x=create_element_div("iface_load_btn","btn_save",s_system_update_interface_title,s_system_update_interface,function(i){load_new_interface(p.files[0],function(z){if(z==0){alert("Интерфейс успешно обновлен")}else{alert("ошибка "+z)}})},g);o.appendChild(document.createElement("br"));var f=create_element_div("sysinfo","btn_get_info",s_system_get_info_title,s_system_get_info,function(i){get_system_information()},t);t.appendChild(document.createElement("br"));copyright(t)}function create_toggle_mode(j,d,h,p,k,o,e,i,f,n,c,b,l){var g=create_element_div(h,"mode_switcher_left "+p,k,o,e,l);var a=create_element_div(d+"_mode_switcher","toggle_mode_name",null,j,null,l);var m=create_element_div(i,"mode_switcher_right "+f,n,c,b,l)}function system_edit_ctl_name(){var b="";if(DEVICE&&DEVICE.controller){var a=(DEVICE.controller.port==80)?"http://":"";b=a+DEVICE.controller.name+"/"+DEVICE.controller.path}else{b=s_system_no_controller}edit_name(s_system_ctl_edit_header,b,function(c){set_system_controller(c,function(f){if(f==0){var d=document.getElementById("system_controller_name");var e=(DEVICE.controller.port==80)?"http://":"";d.innerHTML=e+DEVICE.controller.name+"/"+DEVICE.controller.path}remove_editor()})},function(){remove_editor()})}function get_system_information(){get_system_info(function(){get_system_runlog(function(){get_system_errlog(function(){var m=create_element_div("system_info_container","system_info_container",null,null,null,document.body);if(typeof DEVICE.runlog!=="undefined"){create_element_div("system_header_info_runlog","system_header",null,s_system_info_runlog_header,null,m);m.appendChild(document.createElement("br"));var d=document.createElement("table");d.setAttribute("class","system_info");m.appendChild(d);for(var e=0;e<DEVICE.runlog.length;e++){var l=document.createElement("tr");d.appendChild(l);var k=document.createElement("td");k.setAttribute("class","info_left");l.appendChild(k);k.innerHTML=DEVICE.runlog[e].datetime;var b=document.createElement("td");b.setAttribute("class","info_right");l.appendChild(b);b.innerHTML="0x"+DEVICE.runlog[e].reason.toString(16)}}if(typeof DEVICE.errlog!=="undefined"){create_element_div("system_header_info_errlog","system_header",null,s_system_info_errlog_header,null,m);m.appendChild(document.createElement("br"));var n=document.createElement("table");n.setAttribute("class","system_info");m.appendChild(n);for(var e=0;e<DEVICE.errlog.length;e++){var l=document.createElement("tr");n.appendChild(l);var k=document.createElement("td");k.setAttribute("class","info_left");l.appendChild(k);k.innerHTML=DEVICE.errlog[e].datetime;var b=document.createElement("td");b.setAttribute("class","info_right");l.appendChild(b);b.innerHTML="0x"+DEVICE.errlog[e].errcode.toString(16)}}create_element_div("system_header_info_mem","system_header",null,s_system_info_mem_header,null,m);m.appendChild(document.createElement("br"));var j=document.createElement("table");j.setAttribute("class","system_info");m.appendChild(j);var l=document.createElement("tr");j.appendChild(l);var h=document.createElement("td");h.setAttribute("colspan","2");h.setAttribute("style","width:100%;");l.appendChild(h);h.innerHTML=s_system_heap_free_ram+DEVICE.info.heap_size+" Bytes";var l=document.createElement("tr");j.appendChild(l);var a=document.createElement("td");a.setAttribute("class","info_left");l.appendChild(a);a.innerHTML=s_fs_total_size+DEVICE.info.fs.fs_total+" Bytes";var g=document.createElement("td");g.setAttribute("class","info_right");l.appendChild(g);g.innerHTML=s_fs_used_avail+DEVICE.info.fs.fs_used+"/"+DEVICE.info.fs.fs_avail+" Bytes";for(var e=0;e<DEVICE.info.fs.file_count;e++){var l=document.createElement("tr");j.appendChild(l);var f=document.createElement("td");f.setAttribute("class","info_left");l.appendChild(f);f.innerHTML=DEVICE.info.fs.file[e].name;var c=document.createElement("td");c.setAttribute("class","info_right");l.appendChild(c);c.innerHTML=DEVICE.info.fs.file[e].size+" Bytes"}create_element_div("system_info_btn_close_corner","btn_close_corner",s_btn_close_title,s_btn_close_corner,function(){remove_element("system_info_container")},m)})})})}function system_page_service(){}function system_page_create(){var a=create_element_div("page_info","page_info",null,null,null,document.body);if(!a){return}system_page_service();start_service(system_page_service);system_page_update()}function system_update_info(a){get_system_device_config(function(){if(a){a()}})}var day_onclick=null;var month_list=["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"];var weekday_list=["Пн.","Вт.","Ср.","Чт.","Пт.","Сб.","Вс."];function day_clicked(b,c,a){if(typeof day_onclick!="function"){return}day_onclick((new Date(b,c,a).getTime())/1000)}function remove_calendar(){var a=document.getElementById("calendar_bg");if(a){a.parentNode.removeChild(a)}}function create_calendar(l,C,t,A){var P=document.getElementById("calendar_bg");if(!P){P=document.createElement("div");P.setAttribute("id","calendar_bg");P.setAttribute("class","calendar_bg");document.body.appendChild(P)}else{for(var M=P.childNodes.length-1;M>=0;M--){P.removeChild(P.childNodes[M])}}if(A){day_onclick=A}var N=new Date();var q=N.getFullYear();var O=N.getMonth();var r=N.getDate();var x=N.getDay();x=((x>0)?x-1:6);var G=1;if(C==null||t==null){N=new Date();C=N.getFullYear();t=N.getMonth()}N=new Date(C,t,G);var R=N.getDay();R=((R>0)?R-1:6);var y=new Date(C,t+1,0).getDate();var J=document.createElement("div");J.setAttribute("id","calendar_name");J.setAttribute("class","calendar_name");J.innerHTML=l;var g=document.createElement("div");g.setAttribute("id","calendar_container");g.setAttribute("class","calendar_container");P.appendChild(g);var I=document.createElement("table");I.setAttribute("id","calendar");I.setAttribute("class","calendar");var p=document.createElement("tr");p.setAttribute("id","calendar_header_year");p.setAttribute("class","calendar_header");var v=document.createElement("td");v.setAttribute("id","calendar_year_prev");v.setAttribute("class","calendar_year_prev");v.setAttribute("colspan","1");v.setAttribute("onclick","create_calendar('"+l+"',"+(parseInt(C)-1).toString()+","+t.toString()+",null);");v.innerHTML="<";var n=document.createElement("td");n.setAttribute("id","calendar_year_name");n.setAttribute("class","calendar_year_name");n.setAttribute("colspan","5");n.innerHTML=N.getFullYear().toString();var f=document.createElement("td");f.setAttribute("id","calendar_year_next");f.setAttribute("class","calendar_year_next");f.setAttribute("colspan","2");f.setAttribute("onclick","create_calendar('"+l+"',"+(parseInt(C)+1).toString()+","+t.toString()+",null);");f.innerHTML=">";var k=document.createElement("tr");k.setAttribute("id","calendar_header_month");k.setAttribute("class","calendar_header");var a=document.createElement("td");a.setAttribute("id","calendar_month_prev");a.setAttribute("class","calendar_month_prev");a.setAttribute("colspan","1");a.setAttribute("onclick","create_calendar('"+l+"',"+((t>0)?C:C-1).toString()+","+((t>0)?t-1:11).toString()+",null);");a.innerHTML="<";var B=document.createElement("td");B.setAttribute("id","calendar_month_name");B.setAttribute("class","calendar_month_name");B.setAttribute("colspan","5");B.innerHTML=month_list[N.getMonth()];var u=document.createElement("td");u.setAttribute("id","calendar_month_next");u.setAttribute("class","calendar_month_next");u.setAttribute("colspan","2");u.setAttribute("onclick","create_calendar('"+l+"',"+((t<11)?C:parseInt(C)+1).toString()+","+((t<11)?parseInt(t)+1:0).toString()+",null);");u.innerHTML=">";var F=document.createElement("tr");F.setAttribute("id","calendar_space");F.setAttribute("class","calendar_space");var T=document.createElement("tr");T.setAttribute("id","calendar_weekdays");T.setAttribute("class","calendar_weekdays");var o=document.createElement("td");o.setAttribute("id","calendar_wnum");o.setAttribute("class","calendar_wnum");o.innerHTML="Нед. №";var b=0;var L=document.createElement("td");L.setAttribute("id","calendar_mon");L.setAttribute("class",((q==C&&O==t&&x==b)?"calendar_wday_now":"calendar_wday"));L.innerHTML=weekday_list[b];b++;var h=document.createElement("td");h.setAttribute("id","calendar_tue");h.setAttribute("class",((q==C&&O==t&&x==b)?"calendar_wday_now":"calendar_wday"));h.innerHTML=weekday_list[b];b++;var e=document.createElement("td");e.setAttribute("id","calendar_wed");e.setAttribute("class",((q==C&&O==t&&x==b)?"calendar_wday_now":"calendar_wday"));e.innerHTML=weekday_list[b];b++;var m=document.createElement("td");m.setAttribute("id","calendar_thr");m.setAttribute("class",((q==C&&O==t&&x==b)?"calendar_wday_now":"calendar_wday"));m.innerHTML=weekday_list[b];b++;var E=document.createElement("td");E.setAttribute("id","calendar_fri");E.setAttribute("class",((q==C&&O==t&&x==b)?"calendar_wday_now":"calendar_wday"));E.innerHTML=weekday_list[b];b++;var z=document.createElement("td");z.setAttribute("id","calendar_sat");z.setAttribute("class",((q==C&&O==t&&x==b)?"calendar_wday_now":"calendar_wday"));z.innerHTML=weekday_list[b];b++;var j=document.createElement("td");j.setAttribute("id","calendar_sun");j.setAttribute("class",((q==C&&O==t&&x==b)?"calendar_wday_now":"calendar_wday"));j.innerHTML=weekday_list[b];b++;p.appendChild(v);p.appendChild(n);p.appendChild(f);k.appendChild(a);k.appendChild(B);k.appendChild(u);T.appendChild(o);T.appendChild(L);T.appendChild(h);T.appendChild(e);T.appendChild(m);T.appendChild(E);T.appendChild(z);T.appendChild(j);I.appendChild(p);I.appendChild(k);I.appendChild(F);I.appendChild(T);g.appendChild(J);g.appendChild(I);for(var D=0;D<6;D++){if(((D*7)-R)>=y){break}var c=document.createElement("tr");c.setAttribute("id","calendar_week"+D.toString());c.setAttribute("class","calendar_week");var H=document.createElement("td");H.setAttribute("id","calendar_wnum"+D.toString());H.setAttribute("class","calendar_wnum");H.innerHTML=(D+1).toString();c.appendChild(H);for(var Q=1;Q<8;Q++){var s=document.createElement("td");s.setAttribute("id","calendar_day"+Q.toString());var S=((D*7+Q)-R);if(S>0&&S<=y){if(q==C&&O==t&&r==S){s.setAttribute("class","calendar_day_now")}else{s.setAttribute("class","calendar_day")}s.setAttribute("onclick","day_clicked("+C.toString()+", "+t.toString()+", this.innerHTML);");s.innerHTML=S.toString()}else{s.setAttribute("class","calendar_day_inact")}c.appendChild(s)}I.appendChild(c)}var K=document.createElement("div");K.setAttribute("id","calendar_cancel");K.setAttribute("class","calendar_button");K.setAttribute("onclick","remove_calendar();");K.innerHTML=s_btn_cancel;g.appendChild(K)}var iface="iface.gz";var img_prefix="img/";var style_prefix="";var js_prefix="";var s_loading_resources="<br />Пожалуйста подождите,<br />идёт загрузка ресурсов ...<br />";var BLOCK_SIZE=512;var RESOURCES=[];function wait_download_get_create(){var b=document.getElementById("boot_progress");if(!b){b=document.createElement("div");b.setAttribute("id","boot_progress");b.setAttribute("style","margin:0;position:fixed;width:100%;height:100%;z-index:100;background-color:rgba(250, 250, 250, 0.9);color:#030303;text-align:center;font-size:60px;");document.body.appendChild(b)}else{for(var a=b.childNodes.length-1;a>=0;a--){b.removeChild(b.childNodes[a])}}}function wait_download_get_progress(a){var b=-1;if(a.lengthComputable){b=parseInt((a.loaded/a.total)*100)}var c=document.getElementById("boot_progress");if(c){c.innerHTML=s_loading_resources+((b>=0)?b.toString()+"%":"")}}function wait_download_get_remove(){remove_element("boot_progress")}function tar_get(a,b,d){wait_download_get_create();var c=new XMLHttpRequest();c.open("GET",a,true);c.responseType="arraybuffer";c.addEventListener("progress",wait_download_get_progress);c.addEventListener("load",function(e){if(d){d(c)}wait_download_get_remove()},false);c.addEventListener("error",function(e){console.log(" get error");wait_download_get_remove()},false);c.send(b)}function tar_get_image_src(c){var b=null;for(var a=0;a<RESOURCES.length;a++){if(RESOURCES[a].name==c){b=RESOURCES[a].src;break}}return b}function tar_get_file(c){var b=null;for(var a=0;a<RESOURCES.length;a++){if(RESOURCES[a].name==c){b=decodeUtf8(RESOURCES[a].body);break}}return b}function tar_parse(e){if(e.response){var d=new Uint8Array(e.response);var g=new DataView(d.buffer);window.URL=window.URL||window.webkitURL||window.mozURL||window.msURL;document.body.innerHTML="";var f=0,c=0;while(f<g.byteLength){RESOURCES[c]={};var a,k,h;a=new Uint8Array(d.buffer,f,100);h=0;while(h<100&&a[h]!=0){h++}a=String.fromCharCode.apply(null,new Uint8Array(d.buffer,f,h));RESOURCES[c].name=a;RESOURCES[c].ext=RESOURCES[c].name.split(".").pop();k=new Uint8Array(d.buffer,f+124,12);h=0;while(h<100&&k[h]!=0){h++}k=String.fromCharCode.apply(null,new Uint8Array(d.buffer,f+124,h));RESOURCES[c].size=parseInt(k,8);RESOURCES[c].body=new Uint8Array(d.buffer,f+BLOCK_SIZE,RESOURCES[c].size);var j=null;switch(RESOURCES[c].ext){case"js":j="text/javascript";RESOURCES[c].body=decodeUtf8(RESOURCES[c].body);break;case"css":j="text/css";RESOURCES[c].body=decodeUtf8(RESOURCES[c].body);break;case"png":j="image/png";break}RESOURCES[c].src=window.URL.createObjectURL(new Blob([RESOURCES[c].body],{type:j}));f+=(BLOCK_SIZE+parseInt((RESOURCES[c].size+(BLOCK_SIZE-1))&~(BLOCK_SIZE-1)));c++;var b=f;while(d[b]==0){b++}if((b-f)>=BLOCK_SIZE*2){break}}}else{console.log(" no tar file now")}}function tar_load_complete(a){tar_parse(a);for(var b=0;b<RESOURCES.length;b++){var e=null;var d=null;switch(RESOURCES[b].ext){case"js":e="script";d="text/javascript";break;case"css":e="style";d="text/css";break}if(d==null||e==null){continue}var c=document.createElement(e);c.setAttribute("type",d);c.setAttribute("charset","utf-8");c.innerHTML=RESOURCES[b].body;document.head.appendChild(c)}outlet_update_info(function(){sensor_update_info(function(){system_update_info(null)});var f=create_navigation_panel(3);document.body.appendChild(f);system_service_start()})}tar_get(iface,null,tar_load_complete);